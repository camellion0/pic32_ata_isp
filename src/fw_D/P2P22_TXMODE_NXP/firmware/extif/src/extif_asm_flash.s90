/* *ASM************************************************************************
  Use of this software is subject to Atmel's Software License Agreement.
-------------------------------------------------------------------------------
  $URL: http://svnservulm.corp.atmel.com/svn/CDB/Apps/SW_Lib/Car_Access/CARS_GEN2/ATAB5702A/Branches/P2P22_TXMODE_NXP/firmware/extif/src/extif_asm_flash.s90 $
  $LastChangedRevision: 328482 $
  $LastChangedDate: 2015-07-22 13:17:23 -0600 (Wed, 22 Jul 2015) $
  $LastChangedBy: grueter $
-------------------------------------------------------------------------------
  Project:      ATA5700
  Target MCU:   ATA5700
  Compiler:     IAR Assembler for AVR 6.3.18.0
-------------------------------------------------------------------------------

******************************************************************************
* Copyright 2011, Atmel Automotive GmbH                                       *
*                                                                             *
* This software is owned by the Atmel Automotive GmbH                         *
* and is protected by and subject to worldwide patent protection.             *
* Atmel hereby grants to licensee a personal,                                 *
* non-exclusive, non-transferable license to copy, use, modify, create        *
* derivative works of, and compile the Atmel Source Code and derivative       *
* works for the sole purpose of creating custom software in support of        *
* licensee product to be used only in conjunction with a Atmel integrated     *
* circuit as specified in the applicable agreement. Any reproduction,         *
* modification, translation, compilation, or representation of this           *
* software except as specified above is prohibited without the express        *
* written permission of Atmel.                                                *
*                                                                             *
* Disclaimer: ATMEL MAKES NO WARRANTY OF ANY KIND,EXPRESS OR IMPLIED,         *
* WITH REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED    *
* WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.         *
* Atmel reserves the right to make changes without further notice to the      *
* materials described herein. Atmel does not assume any liability arising     *
* out of the application or use of any product or circuit described herein.   *
* Atmel does not authorize its products for use as critical components in     *
* life-support systems where a malfunction or failure may reasonably be       *
* expected to result in significant injury to the user. The inclusion of      *
* Atmel products in a life-support systems application implies that the       *
* manufacturer assumes all risk of such use and in doing so indemnifies       *
* Atmel against all charges.                                                  *
*                                                                             *
* Use may be limited by and subject to the applicable Atmel software          *
* license agreement.                                                          *
*******************************************************************************/
/* \file extif_asm_flash.s90
*/
    NAME extif_asm_flash

    PUBLIC ATA_pinChangeInterrupt0Handler_ISR_ASM
    PUBLIC ATA_pinChangeInterrupt1Handler_ISR_ASM

    PUBLIC ATA_portB_flash_ASM
    PUBLIC ATA_portD_flash_ASM

    EXTERN g_sAta5700_flash
    EXTERN g_sEventHandling_flash
    EXTERN g_sExtIf
    EXTERN ATA_systemSetEventPin_flash_ASM

/* ===========================================================================*/
/*   INCLUDES                                                                 */
/* ===========================================================================*/
#include "regs.inc"
#include "globals.h"
#include "extif_flash.h"
#include "../../spi/src/ata5700_command_set_flash.h"

/* ===========================================================================*/
/*   Modul Globals                                                            */
/* ===========================================================================*/
/* ===========================================================================*/
/*   Macros                                                                   */
/* ===========================================================================*/
/* ===========================================================================*/
/*   IMPLEMENTATION                                                           */
/* ===========================================================================*/
/* ----------------------------------------------------------------------------- */
/** \brief <b>ATA_pinChangeInterrupt0Handler_ISR_ASM</b>
    is the pin change IRQ on portB.
    triggers each time the logic level of any pin of port B changes. IRQs are
    re-enabled to avoid a blocking of the SPI - ISR.

    \return none
*/
/* ----------------------------------------------------------------------------- */t
RSEG CODE:CODE:ROOT(1)
ATA_pinChangeInterrupt0Handler_ISR_ASM:
    PUSH    R24
    PUSH    R30
    PUSH    R31
    IN      R30 , SREG
    PUSH    R30

    LDS     R30 , g_sExtIf + IFDATA_PCINT0PTRL
    LDS     R31 , g_sExtIf + IFDATA_PCINT0PTRH
    ICALL

    POP     R30
    OUT     SREG , R30

    POP     R31
    POP     R30
    POP     R24
    RETI


/* ----------------------------------------------------------------------------- */
/** \brief <b>ATA_pinChangeInterrupt1Handler_ISR_ASM</b>
    is the pin change IRQ on portD.
    Triggers each time the logic level of any pin of port D changes. IRQs are
    re-enabled to avoid a blocking of the SPI - ISR.

    \return none
*/
/* ----------------------------------------------------------------------------- */
RSEG CODE:CODE:ROOT(1)
ATA_pinChangeInterrupt1Handler_ISR_ASM:
; ----Save Register contents----
    PUSH    R24
    PUSH    R30
    PUSH    R31
    IN      R30 , SREG
    PUSH    R30

    LDS     R30 , g_sExtIf + IFDATA_PCINT1PTRL
    LDS     R31 , g_sExtIf + IFDATA_PCINT1PTRH
    ICALL

    POP     R30
    OUT     SREG , R30              ; restore SREG

    POP     R31
    POP     R30
    POP     R24
    RETI

/* ---------------------------------------------------------------------------*/
/**  \brief <b>ATA_portB_flash_ASM</b>
    checks for the trigger source of the PC irq and set the corresponding flag.

    \return none
*/
/* --------------------------------------------------------------------------*/
RSEG CODE:CODE:ROOT(1)
ATA_portB_flash_ASM:
; ---- Get Triggering Source -------------------------------------------
    IN      R31 , PINB                      ; Load PinB to R31
    LDS     R30 , g_sExtIf + IFDATA_PCINT0OLD  ; Load extIF.pcInt0old to R30
    STS     g_sExtIf + IFDATA_PCINT0OLD , R31
    
    EOR     R30 , R31                       ; XOR R30 and R31 (which pin has changed)
    LDS     R24 , g_sAta5700_flash + ATA5700_EVENTS_PIN_CHANGE_PORT_B 
    OR      R24 , R30                        ; Store all changed pins
    STS     g_sAta5700_flash + ATA5700_EVENTS_PIN_CHANGE_PORT_B , R24
    
    LDS     R31 , PCMSK0                    ; Load PCMSK0 to R31 (only allow event handling for enabled pins)
    AND     R30 , R31                       ; Which pin change was enabled

    LDS     R31 , g_sEventHandling_flash + ATA5700_EVENTS_PIN_CHANGE_PORT_B
    AND     R30 , R31
    CPI     R30 , 0x00                   ; if 0x00 nothing todo
    BREQ    PORTB_ISR_END
    
; ---- set event pin ---------------------------------------------------
    CALL    ATA_systemSetEventPin_flash_ASM
PORTB_ISR_END:
    RET

/* ---------------------------------------------------------------------------*/
/** \brief <b>ATA_portD_ISR_ASM</b>
    checks for the trigger source of the PC irq and set the corresponding flag.

    \return none
*/
/* ---------------------------------------------------------------------------*/
RSEG CODE:CODE:ROOT(1)
ATA_portD_flash_ASM:
; ---- Get IRQ trigger source ------------------------------------------
    IN      R31 , PIND                   ; Load PinD to R31
; ---- Get Triggering Source -------------------------------------------
    LDS     R30 , g_sExtIf + IFDATA_PCINT1OLD        ; Load extIF.pcInt1old to R30
    STS     g_sExtIf + IFDATA_PCINT1OLD , R31
    
    EOR     R30 , R31                      ; XOR R30 and R31
    LDS     R24 , g_sAta5700_flash + ATA5700_EVENTS_PIN_CHANGE_PORT_D
    OR      R24 , R30                        ; Store all changed pins
    STS     g_sAta5700_flash + ATA5700_EVENTS_PIN_CHANGE_PORT_D , R24
    
    LDS     R31 , PCMSK1                   ; Load PCMSK1 to R31
    AND     R30 , R31                      ; AND PCMSK1 and changed IO pin

; ---- Access Event Line if Enabled ------------------------------------
    LDS     R31 , g_sEventHandling_flash + ATA5700_EVENTS_PIN_CHANGE_PORT_D
    AND     R30 , R31                    ; mask ena/dis pins
    CPI     R30 , 0x00                   ; id 0x00 nothing todo
    BREQ    PORTD_ISR_END
; ---- set event pin ---------------------------------------------------
    CALL    ATA_systemSetEventPin_flash_ASM
PORTD_ISR_END:
    RET

    END