///////////////////////////////////////////////////////////////////////////////
//
// IAR C/C++ Compiler V6.70.1.929 for Atmel AVR           05/Apr/2016  13:30:41
// Copyright 1996-2015 IAR Systems AB.
// Network license: DVRIAR01.corpp.atmel.com (STD)
//
//    Source file  =  
//        C:\Users\grueter\Documents\CDB_\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2_Gen2_Merge\firmware\init\src\init.c
//    Command line =  
//        C:\Users\grueter\Documents\CDB_\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2_Gen2_Merge\firmware\init\src\init.c
//        -v3 --enhanced_core -ms -o
//        C:\Users\grueter\Documents\CDB_\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2_Gen2_Merge\appl\libFwROM\IAR\Debug\Obj
//        -lC
//        C:\Users\grueter\Documents\CDB_\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2_Gen2_Merge\appl\libFwROM\IAR\Debug\List
//        -lA
//        C:\Users\grueter\Documents\CDB_\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2_Gen2_Merge\appl\libFwROM\IAR\Debug\List
//        --initializers_in_flash --no_cse --no_inline --no_code_motion
//        --no_cross_call --no_clustering --no_tbaa --debug --64k_flash
//        -DENABLE_BIT_DEFINITIONS -e -I "C:\Program Files (x86)\IAR
//        Systems\Embedded Workbench 6.0\avr\inc\" --eeprom_size 1152 --clib
//        -Ohz
//    List file    =  
//        C:\Users\grueter\Documents\CDB_\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2_Gen2_Merge\appl\libFwROM\IAR\Debug\List\init.s90
//
///////////////////////////////////////////////////////////////////////////////

        NAME init

        RTMODEL "__64bit_doubles", "disabled"
        RTMODEL "__SystemLibrary", "CLib"
        RTMODEL "__cpu", "3"
        RTMODEL "__enhanced_core", "enabled"
        RTMODEL "__has_elpm", "false"
        RTMODEL "__memory_model", "2"
        RTMODEL "__rt_version", "3"

        RSEG CSTACK:DATA:NOROOT(0)
        RSEG RSTACK:DATA:NOROOT(0)

        PUBLIC ATA_initCheckWakeupSource_C
        PUBWEAK _A_PINC
        PUBWEAK _A_PIND
        PUBWEAK __?EEARH
        PUBWEAK __?EEARL
        PUBWEAK __?EECR
        PUBWEAK __?EEDR
        
          CFI Names cfiNames0
          CFI StackFrame CFA_Y Y DATA
          CFI StackFrame CFA_SP SP DATA
          CFI VirtualResource ?RetPad:1, ?RetHigh:8, ?RetLow:8, ?Ret:17
          CFI Resource R0:8, R1:8, R2:8, R3:8, R4:8, R5:8, R6:8, R7:8, R8:8, R9:8
          CFI Resource R10:8, R11:8, R12:8, R13:8, R14:8, R15:8, R16:8, R17:8
          CFI Resource R18:8, R19:8, R20:8, R21:8, R22:8, R23:8, R24:8, R25:8
          CFI Resource R26:8, R27:8, R28:8, R29:8, R30:8, R31:8
          CFI Resource ?RetHighByteMask:8, SP:16, SPH:8, SPL:8, Y:16
          CFI ResourceParts ?Ret ?RetHigh, ?RetLow, ?RetPad
          CFI ResourceParts SP SPH, SPL
          CFI ResourceParts Y R29, R28
          CFI EndNames cfiNames0
        
          CFI Common cfiCommon0 Using cfiNames0
          CFI CodeAlign 1
          CFI DataAlign 1
          CFI ReturnAddress ?Ret CODE
          CFI CFA_Y Y+0
          CFI CFA_SP SP+2
          CFI ?RetPad 0
          CFI ?RetHigh and(load(1, DATA, sub(CFA_SP, 1)), ?RetHighByteMask)
          CFI ?RetLow Frame(CFA_SP, 0)
          CFI ?Ret Concat
          CFI R0 Undefined
          CFI R1 Undefined
          CFI R2 Undefined
          CFI R3 Undefined
          CFI R4 SameValue
          CFI R5 SameValue
          CFI R6 SameValue
          CFI R7 SameValue
          CFI R8 SameValue
          CFI R9 SameValue
          CFI R10 SameValue
          CFI R11 SameValue
          CFI R12 SameValue
          CFI R13 SameValue
          CFI R14 SameValue
          CFI R15 SameValue
          CFI R16 Undefined
          CFI R17 Undefined
          CFI R18 Undefined
          CFI R19 Undefined
          CFI R20 Undefined
          CFI R21 Undefined
          CFI R22 Undefined
          CFI R23 Undefined
          CFI R24 SameValue
          CFI R25 SameValue
          CFI R26 SameValue
          CFI R27 SameValue
          CFI R28 Undefined
          CFI R29 Undefined
          CFI R30 Undefined
          CFI R31 Undefined
          CFI ?RetHighByteMask SameValue
          CFI SPH Undefined
          CFI SPL Undefined
          CFI EndCommon cfiCommon0
        
// C:\Users\grueter\Documents\CDB_\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2_Gen2_Merge\firmware\init\src\init.c
//    1 //lint -e9059
//    2 /* *C**************************************************************************
//    3   Use of this software is subject to Atmel's Software License Agreement.
//    4 -------------------------------------------------------------------------------
//    5   $URL: http://svnservulm.corp.atmel.com/svn/CDB/Apps/SW_Lib/Car_Access/CARS_GEN2/ATAB5702A/Branches/P2_Gen2_Merge/firmware/init/src/init.c $
//    6   $LastChangedRevision: 328482 $
//    7   $LastChangedDate: 2015-07-22 13:17:23 -0600 (Wed, 22 Jul 2015) $
//    8   $LastChangedBy: grueter $
//    9 -------------------------------------------------------------------------------
//   10   Project:      ATA5700
//   11   Target MCU:   ATA5700
//   12   Compiler:     IAR C/C++ Compiler for AVR 6.30.1
//   13 -------------------------------------------------------------------------------
//   14 
//   15 ******************************************************************************
//   16 * Copyright 2011, Atmel Automotive GmbH                                       *
//   17 *                                                                             *
//   18 * This software is owned by the Atmel Automotive GmbH                         *
//   19 * and is protected by and subject to worldwide patent protection.             *
//   20 * Atmel hereby grants to licensee a personal,                                 *
//   21 * non-exclusive, non-transferable license to copy, use, modify, create        *
//   22 * derivative works of, and compile the Atmel Source Code and derivative       *
//   23 * works for the sole purpose of creating custom software in support of        *
//   24 * licensee product to be used only in conjunction with a Atmel integrated     *
//   25 * circuit as specified in the applicable agreement. Any reproduction,         *
//   26 * modification, translation, compilation, or representation of this           *
//   27 * software except as specified above is prohibited without the express        *
//   28 * written permission of Atmel.                                                *
//   29 *                                                                             *
//   30 * Disclaimer: ATMEL MAKES NO WARRANTY OF ANY KIND,EXPRESS OR IMPLIED,         *
//   31 * WITH REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED    *
//   32 * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.         *
//   33 * Atmel reserves the right to make changes without further notice to the      *
//   34 * materials described herein. Atmel does not assume any liability arising     *
//   35 * out of the application or use of any product or circuit described herein.   *
//   36 * Atmel does not authorize its products for use as critical components in     *
//   37 * life-support systems where a malfunction or failure may reasonably be       *
//   38 * expected to result in significant injury to the user. The inclusion of      *
//   39 * Atmel products in a life-support systems application implies that the       *
//   40 * manufacturer assumes all risk of such use and in doing so indemnifies       *
//   41 * Atmel against all charges.                                                  *
//   42 *                                                                             *
//   43 * Use may be limited by and subject to the applicable Atmel software          *
//   44 * license agreement.                                                          *
//   45 ******************************************************************************/
//   46 /** \file init.c
//   47     this package does the wakeup detection and the system initialization
//   48     according to the EEPROM settings.
//   49 */
//   50 //lint -restore
//   51 
//   52 /*===========================================================================*/
//   53 /*  INCLUDES                                                                 */
//   54 /*===========================================================================*/
//   55 #include "init.h"

        ASEGN ABSOLUTE:DATA:NOROOT,026H
// union <unnamed> volatile __io _A_PINC
_A_PINC:
        DS8 1

        ASEGN ABSOLUTE:DATA:NOROOT,029H
// union <unnamed> volatile __io _A_PIND
_A_PIND:
        DS8 1
//   56 #include "../../globals/src/globals_defs.h"
//   57 
//   58 /*===========================================================================*/
//   59 /*  DEFINES                                                                  */
//   60 /*===========================================================================*/
//   61 
//   62 /*===========================================================================*/
//   63 /*  Modul Globals                                                            */
//   64 /*===========================================================================*/
//   65 
//   66 /*===========================================================================*/
//   67 /*  IMPLEMENTATION                                                           */
//   68 /*===========================================================================*/
//   69 
//   70 /*----------------------------------------------------------------------------- */
//   71 /** \brief <b>ATA_initCheckWakeupSource_C</b>
//   72     checks the status of the NPWRON/PWRON pins in order to determine whether a 
//   73     valid system wake-up condition has been detected:
//   74     The wakeupSource is returned as follows:
//   75 
//   76     \li Bit7:   NPWRON6 (PD7)
//   77     \li Bit6:   NPWRON5 (PD6)
//   78     \li Bit5:   NPWRON4 (PD5)
//   79     \li Bit4:   NPWRON3 (PD4)
//   80     \li Bit3:   NPWRON2 (PD3)
//   81     \li Bit2:   NPWRON1 (PD2)
//   82     \li Bit1:   NPWRON0 (PD1)
//   83     \li Bit0:    PWRON  (PC2)
//   84 
//   85     \return     Pin status of POWER ON, respectively NPOWER ON, whereas 1 means 
//   86                 active and 0 means inactive
//   87 
//   88     \internal
//   89     \li 010: Read the NPWRON pin and the PWRON pin from PINC and PIND in 
//   90              order to determine the system wake-up condition and build return value
//   91 
//   92     \Derived{No}
//   93 
//   94     \Rationale{A means to determine which pin was responsible for the 
//   95                system wakeup is required}
//   96 
//   97     \Traceability   N/A
//   98     \endinternal
//   99 \n
//  100 */
//  101 /*----------------------------------------------------------------------------- */

        RSEG CODE:CODE:ROOT(1)
//  102 UINT8FUNC ATA_initCheckWakeupSource_C(void)
ATA_initCheckWakeupSource_C:
          CFI Block cfiBlock0 Using cfiCommon0
          CFI Function ATA_initCheckWakeupSource_C
          CFI NoCalls
//  103 {
//  104     uint8_t bWakeupSource;
//  105 
//  106     /* LLR-Ref: 010 */
//  107     bWakeupSource  = (uint8_t)PIND & (uint8_t)0xFE; /* PD7..1 */
        IN      R17, 0x09
        ANDI    R17, 0xFE
//  108     bWakeupSource |= (uint8_t)(((PINC & BM_PINC2) ? BIT_MASK_0 : 0x00U)); /* PC2 */
        SBIC    0x06, 0x02
        ORI     R17, 0x01
??ATA_initCheckWakeupSource_C_0:
        MOV     R16, R17
//  109     bWakeupSource ^= (uint8_t)0xFE; /* Invert all NPWRON except PWRON */
//  110 
//  111     return bWakeupSource;
        LDI     R17, 254
        EOR     R16, R17
        RET
          CFI EndBlock cfiBlock0
        REQUIRE _A_PIND
        REQUIRE _A_PINC
//  112 }

        ASEGN ABSOLUTE:DATA:NOROOT,01cH
__?EECR:

        ASEGN ABSOLUTE:DATA:NOROOT,01dH
__?EEDR:

        ASEGN ABSOLUTE:DATA:NOROOT,01eH
__?EEARL:

        ASEGN ABSOLUTE:DATA:NOROOT,01fH
__?EEARH:

        END
// 
//  2 bytes in segment ABSOLUTE
// 16 bytes in segment CODE
// 
// 16 bytes of CODE memory
//  0 bytes of DATA memory (+ 2 bytes shared)
//
//Errors: none
//Warnings: none
