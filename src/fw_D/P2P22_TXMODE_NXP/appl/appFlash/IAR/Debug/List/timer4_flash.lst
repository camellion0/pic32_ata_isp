###############################################################################
#
# IAR C/C++ Compiler V7.10.1.1197 for Atmel AVR           13/May/2020  17:03:24
# Copyright 1996-2017 IAR Systems AB.
# Network license: dvriar01.mchp-main.com (STD)
#
#    Source file  =  
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\firmware\timer4\src\timer4_flash.c
#    Command line =  
#        -f C:\Users\C41045\AppData\Local\Temp\EW2214.tmp
#        (C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\firmware\timer4\src\timer4_flash.c
#        -v3 --enhanced_core -ms -o
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\Obj
#        -lCN
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\List
#        -lA
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\List
#        --no_cse --no_inline --no_code_motion --no_cross_call --no_clustering
#        --no_tbaa --debug --64k_flash -DENABLE_BIT_DEFINITIONS -e
#        --eeprom_size 2304 --clib -Ohz)
#    Locale       =  English_USA.1252
#    List file    =  
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\List\timer4_flash.lst
#    Object file  =  
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\Obj\timer4_flash.r90
#
###############################################################################

C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\firmware\timer4\src\timer4_flash.c
      1          //lint -e9059
      2          /******************************************************************************
      3            Use of this software is subject to Microchip's Software License Agreement.
      4          --------------------------------------------------------------------------------
      5            $URL: http://svnservulm.corp.atmel.com/svn/CDB/Apps/SW_Lib/Car_Access/CARS_GEN2/ATAB5702A/Branches/P2P22_TXMODE_NXP/firmware/timer4/src/timer4_flash.c $
      6            $LastChangedRevision: 458065 $
      7            $LastChangedDate: 2017-05-02 04:55:50 -0600 (Tue, 02 May 2017) $
      8            $LastChangedBy: krishna.balan $
      9          -------------------------------------------------------------------------------
     10            Project:      ATA5700
     11            Target MCU:   ATA5700
     12            Compiler:     IAR C/C++ Compiler for AVR 6.3.18.0
     13          -------------------------------------------------------------------------------
     14          
     15          ******************************************************************************
     16          * Copyright 2017, Microchip Technology Incorporated and its subsidiaries.     *
     17          *                                                                             *
     18          * This software is owned by the Microchip Technology Incorporated.            *
     19          * Microchip hereby grants to licensee a personal                              *
     20          * non-exclusive, non-transferable license to copy, use, modify, create        *
     21          * derivative works of, and compile the Microchip Source Code and derivative   *
     22          * works for the sole and exclusive purpose of creating custom software in     *
     23          * support of licensee product to be used only in conjunction with a Microchip *
     24          * integrated circuit as specified in the applicable agreement. Any            *        
     25          * reproduction, modification, translation, compilation, or representation of  *
     26          * this software except as specified above is prohibited without the express   *
     27          * written permission of Microchip.                                            *
     28          *                                                                             *
     29          * Disclaimer: MICROCHIP MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,    *
     30          * WITH REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED    *
     31          * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.         *
     32          * Microchip reserves the right to make changes without further notice to the  *
     33          * materials described herein. Microchip does not assume any liability arising *
     34          * out of the application or use of any product or circuit described herein.   *
     35          * Microchip does not authorize its products for use as critical components in *
     36          * life-support systems where a malfunction or failure may reasonably be       *
     37          * expected to result in significant injury to the user. The inclusion of      *
     38          * Microchip products in a life-support systems application implies that the   *
     39          * manufacturer assumes all risk of such use and in doing so indemnifies       *
     40          * Microchip against all charges.                                              *
     41          *                                                                             *
     42          * Use may be limited by and subject to the applicable Microchip software      *
     43          * license agreement.                                                          *
     44          ******************************************************************************/
     45          //lint -restore
     46          /** \file timer4_flash.c
     47          */
     48          
     49          /*===========================================================================*/
     50          /*  INCLUDES                                                                 */
     51          /*===========================================================================*/
     52          #include "timer4_flash.h"
     53          
     54          /*===========================================================================*/
     55          /*  DEFINES                                                                  */
     56          /*===========================================================================*/
     57          
     58          
     59          /*===========================================================================*/
     60          /*  Modul Globals                                                            */
     61          /*===========================================================================*/
     62          /** \brief <b>tmr4CaptureValues</b>
     63              contains the capture events traced for Timer 4.
     64          */
     65          //#pragma location = ".sram_FlashApp_Timer4"
     66          //__root __no_init uint16_t g_bTimer4CaptureArray_flash[MAX_TIMER4_CAPTURE_VALUES];
     67          
     68          
     69          /** \brief <b>tmr4CaptureIndex</b>
     70              contains the capture event counter to index the traced capture events in
     71              tmr3CaptureValues.
     72          */
     73          //#pragma location = ".sram_FlashApp_Timer4"
     74          //__root __no_init uint8_t g_bTimer4CaptureIndex_flash;
     75          
     76          
     77          /*===========================================================================*/
     78          /*  IMPLEMENTATION                                                           */
     79          /*===========================================================================*/
     80          /*---------------------------------------------------------------------------*/
     81          /** \brief <b>ATA_timer4ComIntHandler_ISR_flash_C</b>
     82              function is used to handle the Timer 4 Compare Match interrupt.
     83              On occurrence, the stored function is executed.
     84          
     85          \param[in,out]  ::g_sTimer4     Global Timer 4 component data
     86          
     87          \return     N/A
     88          
     89          \StackUsageInBytes{XXX}
     90          
     91          \image html ATA_timer4ComIntHandler_ISR_flash_C.png
     92          
     93          \internal
     94          \li 010:  Get stored address to function which has to be executed.
     95          
     96          \li 020:  NULL pointer check.
     97          
     98          \li 030:  Invoke routine.
     99          
    100          \Rationale{N/A}
    101          
    102          \Traceability   N/A
    103          \endinternal
    104          \n
    105          */
    106          /*---------------------------------------------------------------------------*/
    107          /* #pragma vector=T4COMP_vect */
    108          //lint -esym(714, ATA_timer4ComIntHandler_ISR_flash_C) FlSc (10.06.2014)
    109          //lint -esym(765, ATA_timer4ComIntHandler_ISR_flash_C) FlSc (10.06.2014)
    110          /* disable lint rule 714 - symbol 'ATA_timer4ComIntHandler_ISR_flash_C' not referenced
    111           * interrupt assignment to Interrupt Vector Table is done by Flash application
    112           *
    113           * disable lint rule 765 - external symbol 'ATA_timer4ComIntHandler_ISR_flash_C' could be made static
    114           * variable shall be accessible from outside via flash software or other library
    115           * modules
    116           */
    117          #pragma diag_suppress=Ta006

   \                                 In  segment CODE, align 2, keep-with-next, root
    118          __interrupt VOIDFUNC ATA_timer4ComIntHandler_ISR_flash_C(void)
   \                     ATA_timer4ComIntHandler_ISR_flash_C:
    119          {
   \   00000000   938A               ST      -Y, R24
   \   00000002   93FA               ST      -Y, R31
   \   00000004   93EA               ST      -Y, R30
   \   00000006   923A               ST      -Y, R3
   \   00000008   922A               ST      -Y, R2
   \   0000000A   921A               ST      -Y, R1
   \   0000000C   920A               ST      -Y, R0
   \   0000000E   937A               ST      -Y, R23
   \   00000010   936A               ST      -Y, R22
   \   00000012   935A               ST      -Y, R21
   \   00000014   934A               ST      -Y, R20
   \   00000016   933A               ST      -Y, R19
   \   00000018   932A               ST      -Y, R18
   \   0000001A   931A               ST      -Y, R17
   \   0000001C   930A               ST      -Y, R16
   \   0000001E   B78F               IN      R24, 0x3F
    120              /* LLR-Ref: 010 */
    121              void (*fpFunc)(void) = g_sTimer4.fpCompIsr;
   \   00000020   91E0....           LDS     R30, (g_sTimer4 + 1)
   \   00000024   91F0....           LDS     R31, (g_sTimer4 + 2)
    122          
    123              /* LLR-Ref: 020 */
    124              if( fpFunc )
   \   00000028   E000               LDI     R16, LOW(0)
   \   0000002A   30E0               CPI     R30, 0
   \   0000002C   07F0               CPC     R31, R16
   \   0000002E   F009               BREQ    ??ATA_timer4ComIntHandler_ISR_flash_C_0
    125              {
    126                  /* LLR-Ref: 030 */
    127                  fpFunc();
   \   00000030   9509               ICALL
    128              }
    129          }
   \                     ??ATA_timer4ComIntHandler_ISR_flash_C_0:
   \   00000032   BF8F               OUT     0x3F, R24
   \   00000034   9109               LD      R16, Y+
   \   00000036   9119               LD      R17, Y+
   \   00000038   9129               LD      R18, Y+
   \   0000003A   9139               LD      R19, Y+
   \   0000003C   9149               LD      R20, Y+
   \   0000003E   9159               LD      R21, Y+
   \   00000040   9169               LD      R22, Y+
   \   00000042   9179               LD      R23, Y+
   \   00000044   9009               LD      R0, Y+
   \   00000046   9019               LD      R1, Y+
   \   00000048   9029               LD      R2, Y+
   \   0000004A   9039               LD      R3, Y+
   \   0000004C   91E9               LD      R30, Y+
   \   0000004E   91F9               LD      R31, Y+
   \   00000050   9189               LD      R24, Y+
   \   00000052   9518               RETI

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
     15      2   ATA_timer4ComIntHandler_ISR_flash_C
       15      2   -- Indirect call


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      84  ATA_timer4ComIntHandler_ISR_flash_C

 
 84 bytes in segment CODE
 
 84 bytes of CODE memory

Errors: none
Warnings: none
