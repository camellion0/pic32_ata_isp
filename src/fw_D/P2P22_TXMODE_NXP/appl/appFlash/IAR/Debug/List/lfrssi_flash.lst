###############################################################################
#
# IAR C/C++ Compiler V7.10.1.1197 for Atmel AVR           13/May/2020  17:03:22
# Copyright 1996-2017 IAR Systems AB.
# Network license: dvriar01.mchp-main.com (STD)
#
#    Source file  =  
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\firmware\lfrssi\src\lfrssi_flash.c
#    Command line =  
#        -f C:\Users\C41045\AppData\Local\Temp\EW1858.tmp
#        (C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\firmware\lfrssi\src\lfrssi_flash.c
#        -v3 --enhanced_core -ms -o
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\Obj
#        -lCN
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\List
#        -lA
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\List
#        --no_cse --no_inline --no_code_motion --no_cross_call --no_clustering
#        --no_tbaa --debug --64k_flash -DENABLE_BIT_DEFINITIONS -e
#        --eeprom_size 2304 --clib -Ohz)
#    Locale       =  English_USA.1252
#    List file    =  
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\List\lfrssi_flash.lst
#    Object file  =  
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\Obj\lfrssi_flash.r90
#
###############################################################################

C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\firmware\lfrssi\src\lfrssi_flash.c
      1          //lint -e9059
      2          /******************************************************************************
      3            Use of this software is subject to Microchip's Software License Agreement.
      4          --------------------------------------------------------------------------------
      5            $URL: http://svnservulm.corp.atmel.com/svn/CDB/Apps/SW_Lib/Car_Access/CARS_GEN2/ATAB5702A/Branches/P2P22_TXMODE_NXP/firmware/lfrssi/src/lfrssi_flash.c $
      6            $LastChangedRevision: 458065 $
      7            $LastChangedDate: 2017-05-02 04:55:50 -0600 (Tue, 02 May 2017) $
      8            $LastChangedBy: krishna.balan $
      9          -------------------------------------------------------------------------------
     10            Project:      ATA5700
     11            Target MCU:   ATA5700
     12            Compiler:     IAR C/C++ Compiler for AVR 6.30.1
     13          -------------------------------------------------------------------------------
     14          
     15          ******************************************************************************
     16          * Copyright 2017, Microchip Technology Incorporated and its subsidiaries.     *
     17          *                                                                             *
     18          * This software is owned by the Microchip Technology Incorporated.            *
     19          * Microchip hereby grants to licensee a personal                              *
     20          * non-exclusive, non-transferable license to copy, use, modify, create        *
     21          * derivative works of, and compile the Microchip Source Code and derivative   *
     22          * works for the sole and exclusive purpose of creating custom software in     *
     23          * support of licensee product to be used only in conjunction with a Microchip *
     24          * integrated circuit as specified in the applicable agreement. Any            *        
     25          * reproduction, modification, translation, compilation, or representation of  *
     26          * this software except as specified above is prohibited without the express   *
     27          * written permission of Microchip.                                            *
     28          *                                                                             *
     29          * Disclaimer: MICROCHIP MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,    *
     30          * WITH REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED    *
     31          * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.         *
     32          * Microchip reserves the right to make changes without further notice to the  *
     33          * materials described herein. Microchip does not assume any liability arising *
     34          * out of the application or use of any product or circuit described herein.   *
     35          * Microchip does not authorize its products for use as critical components in *
     36          * life-support systems where a malfunction or failure may reasonably be       *
     37          * expected to result in significant injury to the user. The inclusion of      *
     38          * Microchip products in a life-support systems application implies that the   *
     39          * manufacturer assumes all risk of such use and in doing so indemnifies       *
     40          * Microchip against all charges.                                              *
     41          *                                                                             *
     42          * Use may be limited by and subject to the applicable Microchip software      *
     43          * license agreement.                                                          *
     44          ******************************************************************************/
     45          /** \file lfrssi_flash.c
     46          */
     47          
     48          //lint -restore
     49          
     50          /*===========================================================================*/
     51          /*  INCLUDES                                                                 */
     52          /*===========================================================================*/
     53          #include "lfrssi_flash.h"

   \                                 In  segment ABSOLUTE, at 0x35
   \   union <unnamed> volatile __io _A_LTCMR
   \                     _A_LTCMR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x50
   \   union <unnamed> volatile __io _A_LFCR1
   \                     _A_LFCR1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0xcc
   \   union <unnamed> volatile __io _A_SUPCR
   \                     _A_SUPCR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x101
   \   union <unnamed> volatile __ext_io _A_FEEN1
   \                     _A_FEEN1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x1a1
   \   union <unnamed> volatile __ext_io _A_LTCOR
   \                     _A_LTCOR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x1a6
   \   union <unnamed> volatile __ext_io _A_LTEMR
   \                     _A_LTEMR:
   \   00000000                      DS8 1
     54          #include "lfrssi.h"
     55          #include "../../../firmware/timer3/src/timer3.h"
     56          #include "../../../firmware/timer4/src/timer4.h"
     57          
     58          #include "../../globals/src/globals.h"
     59          #include "../../eep/src/eep.h"
     60          #include "../../eep/src/eep_flash.h"
     61          
     62          /*===========================================================================*/
     63          /*  DEFINES                                                                  */
     64          /*===========================================================================*/
     65          
     66          /*===========================================================================*/
     67          /*  Modul Globals                                                            */
     68          /*===========================================================================*/
     69          #pragma location = ".sram_FlashApp_LfRssi"

   \                                 In  segment .sram_FlashApp_LfRssi, align 1, keep-with-next
     70          __no_init sLfRssiAppFlowCtrl g_sLfRssiFlowCtrl_flash;
   \                     g_sLfRssiFlowCtrl_flash:
   \   00000000                      DS8 4
     71          
     72          #pragma location = ".sram_FlashApp_LfRssi"

   \                                 In  segment .sram_FlashApp_LfRssi, align 1, keep-with-next
     73          __no_init sLfRssiAppCtrl  g_sLfRssiCtrl_flash;
   \                     g_sLfRssiCtrl_flash:
   \   00000000                      DS8 2
     74          
     75          #pragma location = ".sram_FlashApp_LfRssi"

   \                                 In  segment .sram_FlashApp_LfRssi, align 1, keep-with-next
     76          __no_init sLfRssiAppRegConfig g_sLfRssiRegConfig_flash;
   \                     g_sLfRssiRegConfig_flash:
   \   00000000                      DS8 5
     77          
     78          #pragma location = ".sram_FlashApp_LfRssi"

   \                                 In  segment .sram_FlashApp_LfRssi, align 1, keep-with-next, root
     79          __root __no_init sLfRssiAppCustConfig g_sLfRssiCustConfig_flash;
   \                     g_sLfRssiCustConfig_flash:
   \   00000000                      DS8 4
     80          
     81          #pragma location = ".sram_FlashApp_LfRssi_BMW"

   \                                 In  segment .sram_FlashApp_LfRssi_BMW, align 1, keep-with-next, root
     82          __root __no_init sLfRssiAppResult g_sLfRssiBmwResult_flash[3];
   \                     g_sLfRssiBmwResult_flash:
   \   00000000                      DS8 60
     83          
     84          #pragma location = ".sram_FlashApp_LfRssi_BMW"

   \                                 In  segment .sram_FlashApp_LfRssi_BMW, align 1, keep-with-next
     85          __no_init lfRssiFlowStateMachineFuncLut_t *g_pLfRssiMeasStateMachineSerial_flash;
   \                     g_pLfRssiMeasStateMachineSerial_flash:
   \   00000000                      DS8 2
     86          

   \                                 In  segment NEAR_F, align 1, keep-with-next
     87          lfRssiFlowStateMachineFuncLut_t g_sLfRssiMeasStateMachineLutSerial_flash[] = {
   \                     g_sLfRssiMeasStateMachineLutSerial_flash:
   \   00000000   ....               DC16 ATA_lfRssiMeasOpen_flash_C/2
   \   00000002   ....               DC16 ATA_lfRssiMeasEnableLfReceiver_flash_C/2
   \   00000004   ....               DC16 ATA_lfRssiMeasStartExt_flash_C/2
   \   00000006   ....               DC16 ATA_lfRssiMeasWaitReady_flash_C/2
   \   00000008   ....               DC16 ATA_lfRssiMeasStartExt_flash_C/2
   \   0000000A   ....               DC16 ATA_lfRssiMeasWaitReady_flash_C/2
   \   0000000C   ....               DC16 ATA_lfRssiMeasExecCalc_flash_C/2
   \   0000000E   ....               DC16 ATA_lfRssiMeasPrepSendResults_flash_C/2
   \   00000010   ........           DC16 ATA_lfRssiMeasSendResult_flash_C/2, ATA_lfRssiMeasClose_flash_C/2
     88              ATA_lfRssiMeasOpen_flash_C,
     89              ATA_lfRssiMeasEnableLfReceiver_flash_C,
     90              ATA_lfRssiMeasStartExt_flash_C,
     91              ATA_lfRssiMeasWaitReady_flash_C,
     92              ATA_lfRssiMeasStartExt_flash_C,
     93              ATA_lfRssiMeasWaitReady_flash_C,
     94              ATA_lfRssiMeasExecCalc_flash_C,
     95              ATA_lfRssiMeasPrepSendResults_flash_C,
     96              ATA_lfRssiMeasSendResult_flash_C,
     97              ATA_lfRssiMeasClose_flash_C
     98          };
     99          
    100          #pragma location = ".sram_FlashApp_LfRssi_BMW"

   \                                 In  segment .sram_FlashApp_LfRssi_BMW, align 1, keep-with-next
    101          __no_init lfRssiFlowStateMachineFuncLut_t *g_pLfRssiMeasStateMachineParallel_flash;
   \                     g_pLfRssiMeasStateMachineParallel_flash:
   \   00000000                      DS8 2
    102          

   \                                 In  segment NEAR_F, align 1, keep-with-next
    103          lfRssiFlowStateMachineFuncLut_t g_sLfRssiMeasStateMachineLutParallel_flash[] = {
   \                     g_sLfRssiMeasStateMachineLutParallel_flash:
   \   00000000   ....               DC16 ATA_lfRssiMeasOpen_flash_C/2
   \   00000002   ....               DC16 ATA_lfRssiMeasEnableLfReceiver_flash_C/2
   \   00000004   ....               DC16 ATA_lfRssiMeasStartExt_flash_C/2
   \   00000006   ....               DC16 ATA_lfRssiMeasWaitReady_flash_C/2
   \   00000008   ....               DC16 ATA_lfRssiMeasStartExt_flash_C/2
   \   0000000A   ....               DC16 ATA_lfRssiMeasWaitReady_flash_C/2
   \   0000000C   ....               DC16 ATA_lfRssiMeasStartInt_flash_C/2
   \   0000000E   ....               DC16 ATA_lfRssiMeasWaitReady_flash_C/2
   \   00000010   ....               DC16 ATA_lfRssiMeasExecCalc_flash_C/2
   \   00000012   ....               DC16 ATA_lfRssiMeasPrepSendResults_flash_C/2
   \   00000014   ........           DC16 ATA_lfRssiMeasSendResult_flash_C/2, ATA_lfRssiMeasClose_flash_C/2
    104              ATA_lfRssiMeasOpen_flash_C,
    105              ATA_lfRssiMeasEnableLfReceiver_flash_C,
    106              ATA_lfRssiMeasStartExt_flash_C,
    107              ATA_lfRssiMeasWaitReady_flash_C,
    108              ATA_lfRssiMeasStartExt_flash_C,
    109              ATA_lfRssiMeasWaitReady_flash_C,
    110              ATA_lfRssiMeasStartInt_flash_C,
    111              ATA_lfRssiMeasWaitReady_flash_C,
    112              ATA_lfRssiMeasExecCalc_flash_C,
    113              ATA_lfRssiMeasPrepSendResults_flash_C,
    114              ATA_lfRssiMeasSendResult_flash_C,
    115              ATA_lfRssiMeasClose_flash_C
    116          };
    117          
    118          
    119          //#pragma location = ".sram_FlashApp_LfRssi_HFM"
    120          //__root __no_init sLfRssiAppResult g_sLfRssiHfmResult_flash[9];
    121          //#pragma location = ".sram_FlashApp_LfRssi_HFM"
    122          //__no_init uint16_t g_wLfRssiMeasSamples[48];
    123          //#pragma location = ".sram_FlashApp_LfRssi_HFM"
    124          //__no_init lfRssiFlowStateMachineFuncLut_t *g_pLfRssiHfmStateMachine_flash;
    125          

   \                                 In  segment NEAR_F, align 1, keep-with-next
    126          lfRssiFlowStateMachineFuncLut_t g_sLfRssiHfmStateMachineLut_flash[] = {
   \                     g_sLfRssiHfmStateMachineLut_flash:
   \   00000000   ....               DC16 ATA_lfRssiMeasOpenHfm_flash_C/2
   \   00000002   ....               DC16 ATA_lfRssiMeasEnableLfReceiver_flash_C/2
   \   00000004   ....               DC16 ATA_lfRssiMeasWaitReadyHfm_flash_C/2
   \   00000006   ........           DC16 ATA_lfRssiMeasExecCalc_flash_C/2, ATA_lfRssiMeasClose_flash_C/2
    127              ATA_lfRssiMeasOpenHfm_flash_C,
    128              ATA_lfRssiMeasEnableLfReceiver_flash_C,
    129              ATA_lfRssiMeasWaitReadyHfm_flash_C,
    130              ATA_lfRssiMeasExecCalc_flash_C,
    131              ATA_lfRssiMeasClose_flash_C
    132          };
    133          

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    134          uint8_t           m_bDataByteCnt;               // RSSI result counter holds the number of bytes to transmit
   \                     m_bDataByteCnt:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    135          uint8_t           m_bLocDataBuff_FillLevel;     // only used for test purposes
   \                     m_bLocDataBuff_FillLevel:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    136          uint8_t           m_bNumMeasCnt;                // measurement counter value
   \                     m_bNumMeasCnt:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    137          uint8_t           m_bPayloadOffsetTxBuf;        // offset value used to store the measurement result data (payload) in TX buffer
   \                     m_bPayloadOffsetTxBuf:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    138          uint16_t          m_wBref;
   \                     m_wBref:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    139          sLfRssiAppResult *m_pResultExt;                 // pointer to structure holding the external measurement results
   \                     m_pResultExt:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    140          sLfRssiAppResult *m_pResultInt;                 // pointer to structure holding the internal measurement results
   \                     m_pResultInt:
   \   00000000                      DS8 2

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
    141          sLfRssiAppResult *m_pCurrResult;                // pointer to structure to store the current measurement results
   \                     m_pCurrResult:
   \   00000000                      DS8 2
    142          
    143          /*===========================================================================*/
    144          /*  IMPLEMENTATION                                                           */
    145          /*===========================================================================*/
    146          /*----------------------------------------------------------------------------- */
    147          /*---------------------------------------------------------------------------*/
    148          /** \brief <b>ATA_lfRssiMeasInit_flash_C</b>
    149          
    150              \param none
    151          
    152              \return none
    153          
    154              \image html ATA_lfRssiMeasInit_flash_C.png
    155              \image rtf ATA_lfRssiMeasInit_flash_C.png
    156              \n
    157          */
    158          /*---------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next, root
    159          VOIDFUNC ATA_lfRssiMeasInit_flash_C(void)
   \                     ATA_lfRssiMeasInit_flash_C:
    160          {
   \   00000000   9760               SBIW    R29:R28, 16
    161              uint8_t tmpBuf[16];
    162          
    163              g_sLfRssiCtrl_flash.bFlags  = LFRSSICONFIG_FLAGS_RESET;
   \   00000002   E000               LDI     R16, 0
   \   00000004   9300....           STS     g_sLfRssiCtrl_flash, R16
    164              g_sLfRssiCtrl_flash.bStatus = LFRSSICONFIG_STATUS_RESET;
   \   00000008   9300....           STS     (g_sLfRssiCtrl_flash + 1), R16
    165          
    166              // read LF RSSI End of Line and LF RSSI SRC calibration EEPROM settings
    167              if( ATA_eepReadBytes_C( &tmpBuf[0], (uint16_t)&g_sEepFlashAppLfRssiEndOfLineCalibrationSettings_flash, sizeof(sEepFlashAppLfRssiEndOfLineCalibrationSettings) + 1U ) == EEC_NO_ERROR )
   \   0000000C   E140               LDI     R20, 16
   \   0000000E   ....               LDI     R18, LOW(g_sEepFlashAppLfRssiEndOfLineCalibrationSettings_flash)
   \   00000010   ....               LDI     R19, (g_sEepFlashAppLfRssiEndOfLineCalibrationSettings_flash) >> 8
   \   00000012   018E               MOVW    R17:R16, R29:R28
   \   00000014   ........           CALL    ATA_eepReadBytes_C
   \   00000018   2300               TST     R16
   \   0000001A   F519               BRNE    ??ATA_lfRssiMeasInit_flash_C_0
    168              {
    169                  // assign pointers to related state machines
    170                  g_pLfRssiMeasStateMachineSerial_flash   = g_sLfRssiMeasStateMachineLutSerial_flash;
   \   0000001C   ....               LDI     R16, LOW(g_sLfRssiMeasStateMachineLutSerial_flash)
   \   0000001E   ....               LDI     R17, (g_sLfRssiMeasStateMachineLutSerial_flash) >> 8
   \   00000020   ....               LDI     R30, LOW(g_pLfRssiMeasStateMachineSerial_flash)
   \   00000022   ....               LDI     R31, (g_pLfRssiMeasStateMachineSerial_flash) >> 8
   \   00000024   8300               ST      Z, R16
   \   00000026   8311               STD     Z+1, R17
    171                  g_pLfRssiMeasStateMachineParallel_flash = g_sLfRssiMeasStateMachineLutParallel_flash;
   \   00000028   ....               LDI     R16, LOW(g_sLfRssiMeasStateMachineLutParallel_flash)
   \   0000002A   ....               LDI     R17, (g_sLfRssiMeasStateMachineLutParallel_flash) >> 8
   \   0000002C   ....               LDI     R30, LOW(g_pLfRssiMeasStateMachineParallel_flash)
   \   0000002E   ....               LDI     R31, (g_pLfRssiMeasStateMachineParallel_flash) >> 8
   \   00000030   8300               ST      Z, R16
   \   00000032   8311               STD     Z+1, R17
    172                  //g_pLfRssiHfmStateMachine_flash          = g_sLfRssiHfmStateMachineLut_flash;
    173          
    174                  m_bNumMeasCnt         = 0;
   \   00000034   E000               LDI     R16, 0
   \   00000036   9300....           STS     m_bNumMeasCnt, R16
    175                  m_bPayloadOffsetTxBuf = 0; // no payload offset
   \   0000003A   9300....           STS     m_bPayloadOffsetTxBuf, R16
    176          
    177                  // build Bref value for final result calculations
    178                  m_wBref = (uint16_t)((tmpBuf[14]<<SHIFT_LOW_TO_HIGH_BYTE | tmpBuf[13]));
   \   0000003E   853E               LDD     R19, Y+14
   \   00000040   850D               LDD     R16, Y+13
   \   00000042   ....               LDI     R30, LOW(m_wBref)
   \   00000044   ....               LDI     R31, (m_wBref) >> 8
   \   00000046   8300               ST      Z, R16
   \   00000048   8331               STD     Z+1, R19
    179          
    180                  // load EEPROM settings to registers, pass the desired SRC calibration value
    181                  ATA_lfRssiSetEepromConfig_C( tmpBuf[15] );
   \   0000004A   850F               LDD     R16, Y+15
   \   0000004C   ........           CALL    ATA_lfRssiSetEepromConfig_C
    182          
    183                  // calculate the LF channel calibration values
    184                  ATA_lfRssiCalcChanCalibVal_C( tmpBuf[0], (uint16_t*)&tmpBuf[1], (uint16_t*)&tmpBuf[7] );
   \   00000050   01AE               MOVW    R21:R20, R29:R28
   \   00000052   5F49               SUBI    R20, 249
   \   00000054   4F5F               SBCI    R21, 255
   \   00000056   019E               MOVW    R19:R18, R29:R28
   \   00000058   5F2F               SUBI    R18, 255
   \   0000005A   4F3F               SBCI    R19, 255
   \   0000005C   8108               LD      R16, Y
   \   0000005E   ........           CALL    ATA_lfRssiCalcChanCalibVal_C
    185              }
    186          }
   \                     ??ATA_lfRssiMeasInit_flash_C_0:
   \   00000062   9660               ADIW    R29:R28, 16
   \   00000064   9508               RET
    187          
    188          
    189          /*---------------------------------------------------------------------------*/
    190          /** \brief <b>ATA_lfRssiMeasStart_flash_C</b>
    191          
    192              \param none
    193          
    194              \return none
    195          
    196              \image html ATA_lfRssiMeasStart_flash_C.png
    197              \image rtf ATA_lfRssiMeasStart_flash_C.png
    198              \n
    199          */
    200          /*---------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next, root
    201          VOIDFUNC ATA_lfRssiMeasConfig_flash_C(uint8_t bType)
   \                     ATA_lfRssiMeasConfig_flash_C:
    202          {
    203              if( bType & SERIAL_LFRSSI_MEASUREMENT )
   \   00000000   FB01               BST     R16, 1
   \   00000002   F466               BRTC    ??ATA_lfRssiMeasConfig_flash_C_0
    204              {
    205                  LTCMR &= ~BM_LTCM;  // disable LF timer continuous mode
   \   00000004   98AD               CBI     0x15, 0x05
    206          
    207                  g_sLfRssiCtrl_flash.bStatus   = LFRSSICONFIG_STATUS_BM_MEASUREMENT_SERIAL_FLAG; // LF RSSI measurement after sending TX response
   \   00000006   E001               LDI     R16, 1
    208                  g_sLfRssiFlowCtrl_flash.fpLut = g_pLfRssiMeasStateMachineSerial_flash;
   \   00000008   ....               LDI     R30, LOW(g_pLfRssiMeasStateMachineSerial_flash)
   \   0000000A   ....               LDI     R31, (g_pLfRssiMeasStateMachineSerial_flash) >> 8
   \   0000000C   8120               LD      R18, Z
   \   0000000E   8131               LDD     R19, Z+1
   \   00000010   ....               LDI     R30, LOW(g_sLfRssiFlowCtrl_flash)
   \   00000012   ....               LDI     R31, (g_sLfRssiFlowCtrl_flash) >> 8
   \   00000014   8321               STD     Z+1, R18
   \   00000016   8332               STD     Z+2, R19
    209                  m_bLocDataBuff_FillLevel      = 0;
   \   00000018   E010               LDI     R17, 0
   \   0000001A   C012               RJMP    ??ATA_lfRssiMeasConfig_flash_C_1
    210              }
    211              else
    212              {
    213                  LTEMR  = 0x00;                                                  // disable LF timer events
   \                     ??ATA_lfRssiMeasConfig_flash_C_0:
   \   0000001C   E000               LDI     R16, 0
   \   0000001E   9300....           STS     _A_LTEMR, R16
    214                  LTCOR  = (uint8_t)(g_sLfRssiCustConfig_flash.wCycleTime>>8);    // set next compare match value
   \   00000022   9100....           LDS     R16, (g_sLfRssiCustConfig_flash + 3)
   \   00000026   9300....           STS     _A_LTCOR, R16
    215                  LTCMR &= ~BM_LTSM;                                              // disable start LF timer on event
   \   0000002A   98AE               CBI     0x15, 0x06
    216          
    217                  g_sLfRssiCtrl_flash.bStatus   = LFRSSICONFIG_STATUS_RESET;      // LF RSSI measurement in parallel with sending TX response
   \   0000002C   E000               LDI     R16, 0
    218                  g_sLfRssiFlowCtrl_flash.fpLut = g_pLfRssiMeasStateMachineParallel_flash;
   \   0000002E   ....               LDI     R30, LOW(g_pLfRssiMeasStateMachineParallel_flash)
   \   00000030   ....               LDI     R31, (g_pLfRssiMeasStateMachineParallel_flash) >> 8
   \   00000032   8120               LD      R18, Z
   \   00000034   8131               LDD     R19, Z+1
   \   00000036   ....               LDI     R30, LOW(g_sLfRssiFlowCtrl_flash)
   \   00000038   ....               LDI     R31, (g_sLfRssiFlowCtrl_flash) >> 8
   \   0000003A   8321               STD     Z+1, R18
   \   0000003C   8332               STD     Z+2, R19
    219                  m_bLocDataBuff_FillLevel      = 4;
   \   0000003E   E014               LDI     R17, 4
   \                     ??ATA_lfRssiMeasConfig_flash_C_1:
   \   00000040   9300....           STS     (g_sLfRssiCtrl_flash + 1), R16
   \   00000044   9310....           STS     m_bLocDataBuff_FillLevel, R17
    220              }
    221          
    222              m_pResultExt = &g_sLfRssiBmwResult_flash[0];    // set pointer to structure holding the first external measurement results
   \   00000048   ....               LDI     R16, LOW(g_sLfRssiBmwResult_flash)
   \   0000004A   ....               LDI     R17, (g_sLfRssiBmwResult_flash) >> 8
   \   0000004C   ....               LDI     R30, LOW(m_pResultExt)
   \   0000004E   ....               LDI     R31, (m_pResultExt) >> 8
   \   00000050   8300               ST      Z, R16
   \   00000052   8311               STD     Z+1, R17
    223              m_pResultInt = &g_sLfRssiBmwResult_flash[2];    // set pointer to structure holding the internal measurement results
   \   00000054   ....               LDI     R16, LOW((g_sLfRssiBmwResult_flash + 40))
   \   00000056   ....               LDI     R17, HIGH((g_sLfRssiBmwResult_flash + 40))
   \   00000058   ....               LDI     R30, LOW(m_pResultInt)
   \   0000005A   ....               LDI     R31, (m_pResultInt) >> 8
   \   0000005C   8300               ST      Z, R16
   \   0000005E   8311               STD     Z+1, R17
    224          
    225              g_sLfRssiCustConfig_flash.bNumMeas = 3; // 2x external + 1x internal LF RSSI measurement, NOTE: only dummy internal measurement for serial measurement test
   \   00000060   E003               LDI     R16, 3
   \   00000062   9300....           STS     g_sLfRssiCustConfig_flash, R16
    226              g_sLfRssiCustConfig_flash.bOptions = 2; // internal LF RSSI measurement takes place at the end of the measurement sequence
   \   00000066   E002               LDI     R16, 2
   \   00000068   9300....           STS     (g_sLfRssiCustConfig_flash + 1), R16
    227          
    228              g_sLfRssiFlowCtrl_flash.bIndex = 0;
   \   0000006C   E000               LDI     R16, 0
   \   0000006E   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    229              g_sLfRssiFlowCtrl_flash.bLastRfTxStateIndex = 0;
   \   00000072   9300....           STS     (g_sLfRssiFlowCtrl_flash + 3), R16
    230          
    231              m_bDataByteCnt        = 1; // at least one byte to send back via RF TX
   \   00000076   E001               LDI     R16, 1
   \   00000078   9300....           STS     m_bDataByteCnt, R16
    232              m_bPayloadOffsetTxBuf = 1; // one byte offset, used as response identifier
   \   0000007C   9300....           STS     m_bPayloadOffsetTxBuf, R16
    233              g_sLfRssiCtrl_flash.bFlags = LFRSSICONFIG_FLAGS_BM_MEASUREMENT_ENABLE_FLAG;   // enable LF RSSI measurement
   \   00000080   9300....           STS     g_sLfRssiCtrl_flash, R16
    234          }
   \   00000084   9508               RET
   \   00000086                      REQUIRE _A_LTCMR
   \   00000086                      REQUIRE _A_LTEMR
   \   00000086                      REQUIRE _A_LTCOR
    235          
    236          
    237          /*---------------------------------------------------------------------------*/
    238          /** \brief <b>ATA_lfRssiMeasProcessing_flash_C</b>
    239              triggers the active sw state of currently running sw state machine. This
    240              function should be placed in main loop context or should be run periodically
    241              to ensure RFTX functionality
    242          
    243              010:    set GPIOR0.1 to indicate begin of state machine activity for debug purpose
    244              020:    decode and execute currently active sw state
    245              030:    reset GPIOR0.1 to indicate end of state machine activity for debug purpose
    246          
    247              \param none
    248          
    249              \return none
    250          
    251              \image html ATA_lfRssiMeasProcessing_flash_C.png
    252              \image rtf ATA_lfRssiMeasProcessing_flash_C.png
    253              \n
    254          */
    255          /*---------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next, root
    256          VOIDFUNC ATA_lfRssiMeasProcessing_flash_C(void)
   \                     ATA_lfRssiMeasProcessing_flash_C:
    257          {
   \   00000000   93BA               ST      -Y, R27
   \   00000002   93AA               ST      -Y, R26
    258              /* LLR-Ref: 010 */
    259              //GPIOR0 |= BIT_MASK_1;   /* set GPIOR0.1 to indicate begin of state machine activity */
    260          
    261              /* LLR-Ref: 020 */
    262              lfRssiFlowStateMachineFunc_t fpFunc = *(lfRssiFlowStateMachineFunc_t)g_sLfRssiFlowCtrl_flash.fpLut[g_sLfRssiFlowCtrl_flash.bIndex];
   \   00000004   9100....           LDS     R16, g_sLfRssiFlowCtrl_flash
    263              fpFunc();
   \   00000008   ....               LDI     R26, LOW((g_sLfRssiFlowCtrl_flash + 1))
   \   0000000A   ....               LDI     R27, HIGH((g_sLfRssiFlowCtrl_flash + 1))
   \   0000000C   91ED               LD      R30, X+
   \   0000000E   91FC               LD      R31, X
   \   00000010   E012               LDI     R17, 2
   \   00000012   9F01               MUL     R16, R17
   \   00000014   0DE0               ADD     R30, R0
   \   00000016   1DF1               ADC     R31, R1
   \   00000018   9105               LPM     R16, Z+
   \   0000001A   91F4               LPM     R31, Z
   \   0000001C   2FE0               MOV     R30, R16
   \   0000001E   9509               ICALL
    264          
    265              /* LLR-Ref: 030 */
    266              //GPIOR0 &= (uint8_t)~BIT_MASK_1;   /* reset GPIOR0.1 to indicate end of state machine activity */
    267          }
   \   00000020   91A9               LD      R26, Y+
   \   00000022   91B9               LD      R27, Y+
   \   00000024   9508               RET
    268          
    269          
    270          
    271          /*----------------------------------------------------------------------------- */
    272          /** \brief <b>ATA_lfRssiMeasOpen_flash_C</b>
    273              .
    274          
    275              \param none
    276          
    277              \return none
    278          
    279              \image html ATA_lfRssiMeasOpen_flash_C.png
    280              \image rtf ATA_lfRssiMeasOpen_flash_C.png
    281              \n
    282          */
    283          /*----------------------------------------------------------------------------- */

   \                                 In  segment CODE, align 2, keep-with-next, root
    284          VOIDFUNC ATA_lfRssiMeasOpen_flash_C(void)
   \                     ATA_lfRssiMeasOpen_flash_C:
    285          {
    286              /* NOTE AJ: index changed from 0 to 1 by state 0 itself, so state 1 has to be invoked at least one time */
    287              /* do the LF RSSI initialization in dependency of certain TX state machine state */
    288              if( ( g_sRfTxFlowCtrl.bIndex == RFTX_BUF_STATE_WAIT_AVCC ) ||
    289                  ( g_sRfTxFlowCtrl.bIndex == RFTX_BUF_STATE_WAIT_XTO ) ||
    290                  ( g_sRfTxFlowCtrl.bIndex == RFTX_BUF_STATE_WAIT_FILLLEVEL ) )
   \   00000000   9100....           LDS     R16, g_sRfTxFlowCtrl
   \   00000004   3001               CPI     R16, 1
   \   00000006   F041               BREQ    ??ATA_lfRssiMeasOpen_flash_C_0
   \   00000008   9100....           LDS     R16, g_sRfTxFlowCtrl
   \   0000000C   3003               CPI     R16, 3
   \   0000000E   F021               BREQ    ??ATA_lfRssiMeasOpen_flash_C_0
   \   00000010   9100....           LDS     R16, g_sRfTxFlowCtrl
   \   00000014   3006               CPI     R16, 6
   \   00000016   F4F9               BRNE    ??ATA_lfRssiMeasOpen_flash_C_1
    291              {
    292                  /* compare last state and current state, if unequal, set flag and store current state */
    293                  if( g_sLfRssiFlowCtrl_flash.bLastRfTxStateIndex != g_sRfTxFlowCtrl.bIndex )
   \                     ??ATA_lfRssiMeasOpen_flash_C_0:
   \   00000018   9100....           LDS     R16, (g_sLfRssiFlowCtrl_flash + 3)
   \   0000001C   9110....           LDS     R17, g_sRfTxFlowCtrl
   \   00000020   1701               CP      R16, R17
   \   00000022   F041               BREQ    ??ATA_lfRssiMeasOpen_flash_C_2
    294                  {
    295                      g_sLfRssiCtrl_flash.bStatus |= LFRSSICONFIG_STATUS_BM_LASTSTATECHANGE_FLAG;
   \   00000024   ....               LDI     R30, LOW(g_sLfRssiCtrl_flash)
   \   00000026   ....               LDI     R31, (g_sLfRssiCtrl_flash) >> 8
   \   00000028   8101               LDD     R16, Z+1
   \   0000002A   6002               ORI     R16, 0x02
   \   0000002C   8301               STD     Z+1, R16
    296                      g_sLfRssiFlowCtrl_flash.bLastRfTxStateIndex = g_sRfTxFlowCtrl.bIndex;
   \   0000002E   9100....           LDS     R16, g_sRfTxFlowCtrl
   \   00000032   ....               RJMP    ?Subroutine1
    297                  }
    298                  else
    299                  {
    300                      /* invoke open routine only if both states matching */
    301                      if( g_sLfRssiCtrl_flash.bStatus & LFRSSICONFIG_STATUS_BM_LASTSTATECHANGE_FLAG )
   \                     ??ATA_lfRssiMeasOpen_flash_C_2:
   \   00000034   9100....           LDS     R16, (g_sLfRssiCtrl_flash + 1)
   \   00000038   FF01               SBRS    R16, 1
   \   0000003A   C012               RJMP    ??ATA_lfRssiMeasOpen_flash_C_3
    302                      {
    303                          ATA_lfRssiOpen_C();
   \   0000003C   ........           CALL    ATA_lfRssiOpen_C
    304                          g_sLfRssiFlowCtrl_flash.bIndex++;
   \   00000040   9100....           LDS     R16, g_sLfRssiFlowCtrl_flash
   \   00000044   9503               INC     R16
   \   00000046   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    305                          g_sLfRssiCtrl_flash.bStatus &= ~LFRSSICONFIG_STATUS_BM_LASTSTATECHANGE_FLAG;
   \   0000004A   ....               LDI     R30, LOW(g_sLfRssiCtrl_flash)
   \   0000004C   ....               LDI     R31, (g_sLfRssiCtrl_flash) >> 8
   \   0000004E   8101               LDD     R16, Z+1
   \   00000050   7F0D               ANDI    R16, 0xFD
   \   00000052   8301               STD     Z+1, R16
   \   00000054   9508               RET
    306          
    307                          /* TODO AJ: implement error handling */
    308                      }
    309                  }
    310              }
    311              else
    312              {
    313                  g_sLfRssiCtrl_flash.bStatus &= ~LFRSSICONFIG_STATUS_BM_LASTSTATECHANGE_FLAG;
   \                     ??ATA_lfRssiMeasOpen_flash_C_1:
   \   00000056   ....               LDI     R30, LOW(g_sLfRssiCtrl_flash)
   \   00000058   ....               LDI     R31, (g_sLfRssiCtrl_flash) >> 8
   \   0000005A   8101               LDD     R16, Z+1
   \   0000005C   7F0D               ANDI    R16, 0xFD
   \   0000005E   8301               STD     Z+1, R16
    314              }
    315          
    316          }
   \                     ??ATA_lfRssiMeasOpen_flash_C_3:
   \   00000060   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   9300....           STS     (g_sLfRssiFlowCtrl_flash + 3), R16
   \   00000004   9508               RET
    317          
    318          
    319          /*----------------------------------------------------------------------------- */
    320          /** \brief <b>ATA_lfRssiMeasEnableLfReceiver_flash_C</b>
    321              enables the LF receiver and increment the state number.
    322          
    323              \param none
    324          
    325              \return none
    326          
    327              \image html ATA_lfRssiMeasEnableLfReceiver_flash_C.png
    328              \image rtf ATA_lfRssiMeasEnableLfReceiver_flash_C.png
    329              \n
    330          */
    331          /*----------------------------------------------------------------------------- */

   \                                 In  segment CODE, align 2, keep-with-next, root
    332          VOIDFUNC ATA_lfRssiMeasEnableLfReceiver_flash_C(void)
   \                     ATA_lfRssiMeasEnableLfReceiver_flash_C:
    333          {
    334              LFCR1 |= BM_LFRE;
   \   00000000   B700               IN      R16, 0x30
   \   00000002   6800               ORI     R16, 0x80
   \   00000004   BF00               OUT     0x30, R16
    335              g_sLfRssiFlowCtrl_flash.bIndex++;
   \   00000006   9100....           LDS     R16, g_sLfRssiFlowCtrl_flash
   \   0000000A   9503               INC     R16
   \   0000000C   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    336          }
   \   00000010   9508               RET
   \   00000012                      REQUIRE _A_LFCR1
    337          
    338          
    339          /*----------------------------------------------------------------------------- */
    340          /** \brief <b>ATA_lfRssiMeasStartInt_flash_C</b>
    341              .
    342          
    343              \param none
    344          
    345              \return none
    346          
    347              \image html ATA_lfRssiMeasStartInt_flash_C.png
    348              \image rtf ATA_lfRssiMeasStartInt_flash_C.png
    349              \n
    350          */
    351          /*----------------------------------------------------------------------------- */

   \                                 In  segment CODE, align 2, keep-with-next, root
    352          VOIDFUNC ATA_lfRssiMeasStartInt_flash_C(void)
   \                     ATA_lfRssiMeasStartInt_flash_C:
    353          {
    354              /* NOTE AJ: index changed from 0 to 1 by state 0 itself, so state 1 has to be invoked at least one time */
    355              /* start the internal LF RSSI measurement after LF timer has expired */
    356              if( g_bResponseDelayReached && !g_bBytesToTransmit )
   \   00000000   9100....           LDS     R16, g_bResponseDelayReached
   \   00000004   2300               TST     R16
   \   00000006   F0C1               BREQ    ??ATA_lfRssiMeasStartInt_flash_C_0
   \   00000008   9100....           LDS     R16, g_bBytesToTransmit
   \   0000000C   2300               TST     R16
   \   0000000E   F4A1               BRNE    ??ATA_lfRssiMeasStartInt_flash_C_0
    357              {
    358                  g_bResponseDelayReached = FALSE;
   \   00000010   E000               LDI     R16, 0
   \   00000012   9300....           STS     g_bResponseDelayReached, R16
    359          
    360                  /* close Timer3 to synchronize TX modulator and Timer3 clocks when re-opening by TX state machine */
    361                  ATA_timer3Close_C();
   \   00000016   ........           CALL    ATA_timer3Close_C
    362          
    363                  ATA_lfRssiMeasStart_C( &g_sLfRssiRegConfig_flash, 1U, 0U );
   \   0000001A   E030               LDI     R19, 0
   \   0000001C   E021               LDI     R18, 1
   \   0000001E   ....               LDI     R16, LOW(g_sLfRssiRegConfig_flash)
   \   00000020   ....               LDI     R17, (g_sLfRssiRegConfig_flash) >> 8
   \   00000022   ........           CALL    ATA_lfRssiMeasStart_C
    364          
    365                  /* reconfigure LF timer, 3ms (serial measurement), 4ms (parallel measurement) */
    366                  LTCOR = (uint8_t)g_sLfRssiCustConfig_flash.wCycleTime;
   \   00000026   9100....           LDS     R16, (g_sLfRssiCustConfig_flash + 2)
   \   0000002A   9300....           STS     _A_LTCOR, R16
    367                  /* NOTE AJ: LF timer still running as configured */
    368          
    369                  g_sLfRssiFlowCtrl_flash.bIndex++;
   \   0000002E   9100....           LDS     R16, g_sLfRssiFlowCtrl_flash
   \   00000032   9503               INC     R16
   \   00000034   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    370              }
    371          }
   \                     ??ATA_lfRssiMeasStartInt_flash_C_0:
   \   00000038   9508               RET
   \   0000003A                      REQUIRE _A_LTCOR
    372          
    373          
    374          /*----------------------------------------------------------------------------- */
    375          /** \brief <b>ATA_lfRssiMeasStartExt_flash_C</b>
    376              .
    377          
    378              \param none
    379          
    380              \return none
    381          
    382              \image html ATA_lfRssiMeasStartExt_flash_C.png
    383              \image rtf ATA_lfRssiMeasStartExt_flash_C.png
    384              \n
    385          */
    386          /*----------------------------------------------------------------------------- */

   \                                 In  segment CODE, align 2, keep-with-next, root
    387          VOIDFUNC ATA_lfRssiMeasStartExt_flash_C(void)
   \                     ATA_lfRssiMeasStartExt_flash_C:
    388          {
    389              /* NOTE AJ: index changed from 0 to 1 by state 0 itself, so state 1 has to be invoked at least one time */
    390              /* start the external LF RSSI measurement after LF timer has expired */
    391              if( g_bResponseDelayReached && !g_bBytesToTransmit )
   \   00000000   9100....           LDS     R16, g_bResponseDelayReached
   \   00000004   2300               TST     R16
   \   00000006   F101               BREQ    ??ATA_lfRssiMeasStartExt_flash_C_0
   \   00000008   9100....           LDS     R16, g_bBytesToTransmit
   \   0000000C   2300               TST     R16
   \   0000000E   F4E1               BRNE    ??ATA_lfRssiMeasStartExt_flash_C_0
    392              {
    393                  g_bResponseDelayReached = FALSE;
   \   00000010   E000               LDI     R16, 0
   \   00000012   9300....           STS     g_bResponseDelayReached, R16
    394          
    395                  /* close Timer3 to synchronize TX modulator and Timer3 clocks when re-opening by TX state machine */
    396                  ATA_timer3Close_C();
   \   00000016   ........           CALL    ATA_timer3Close_C
    397          
    398                  ATA_lfRssiMeasStart_C( &g_sLfRssiRegConfig_flash, 0U, 0U );
   \   0000001A   E030               LDI     R19, 0
   \   0000001C   E020               LDI     R18, 0
   \   0000001E   ....               LDI     R16, LOW(g_sLfRssiRegConfig_flash)
   \   00000020   ....               LDI     R17, (g_sLfRssiRegConfig_flash) >> 8
   \   00000022   ........           CALL    ATA_lfRssiMeasStart_C
    399          
    400                  /* no LF timer reconfiguration needed, still running, re-use of counter value */
    401                  /* NOTE AJ: LF timer still running as configured */
    402          
    403                  g_bBytesToTransmit       = m_bLocDataBuff_FillLevel;
   \   00000026   9100....           LDS     R16, m_bLocDataBuff_FillLevel
   \   0000002A   9300....           STS     g_bBytesToTransmit, R16
    404                  m_bLocDataBuff_FillLevel = 0;
   \   0000002E   E000               LDI     R16, 0
   \   00000030   9300....           STS     m_bLocDataBuff_FillLevel, R16
    405          
    406                  /* increment number of data bytes to send and state machine index */
    407                  m_bDataByteCnt += 2;
   \   00000034   9100....           LDS     R16, m_bDataByteCnt
   \   00000038   5F0E               SUBI    R16, 254
   \   0000003A   9300....           STS     m_bDataByteCnt, R16
    408          
    409                  g_sLfRssiFlowCtrl_flash.bIndex++;
   \   0000003E   9100....           LDS     R16, g_sLfRssiFlowCtrl_flash
   \   00000042   9503               INC     R16
   \   00000044   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    410              }
    411          }
   \                     ??ATA_lfRssiMeasStartExt_flash_C_0:
   \   00000048   9508               RET
    412          
    413          
    414          /*----------------------------------------------------------------------------- */
    415          /** \brief <b>ATA_lfRssiMeasWaitReady_flash_C</b>
    416              .
    417          
    418              \param none
    419          
    420              \return none
    421          
    422              \image html ATA_lfRssiMeasWaitReady_flash_C.png
    423              \image rtf ATA_lfRssiMeasWaitReady_flash_C.png
    424              \n
    425          */
    426          /*----------------------------------------------------------------------------- */

   \                                 In  segment CODE, align 2, keep-with-next, root
    427          VOIDFUNC ATA_lfRssiMeasWaitReady_flash_C(void)
   \                     ATA_lfRssiMeasWaitReady_flash_C:
    428          {
    429              /* wait until LF RSSI measurement signalizes readiness */
    430              if( g_sLfRssi.bStatus & LFRSSI_STATUS_BM_MEAS_DATA_AVAILABLE_FLAG )
   \   00000000   9100....           LDS     R16, (g_sLfRssi + 1)
   \   00000004   FF07               SBRS    R16, 7
   \   00000006   C02B               RJMP    ??ATA_lfRssiMeasWaitReady_flash_C_0
    431              {
    432                  /* gather measurement results */
    433                  ATA_lfRssiGetAverageResult_C((uint8_t*)&g_sLfRssiBmwResult_flash[m_bNumMeasCnt].wRawLfRssi[0], (uint8_t*)0x0000);
   \   00000008   E020               LDI     R18, 0
   \   0000000A   E030               LDI     R19, 0
   \   0000000C   9100....           LDS     R16, m_bNumMeasCnt
   \   00000010   E010               LDI     R17, 0
   \   00000012   E144               LDI     R20, 20
   \   00000014   E050               LDI     R21, 0
   \   00000016   ........           CALL    ?S_EC_MUL_L02
   \   0000001A   01A8               MOVW    R21:R20, R17:R16
   \   0000001C   ....               LDI     R16, LOW(g_sLfRssiBmwResult_flash)
   \   0000001E   ....               LDI     R17, (g_sLfRssiBmwResult_flash) >> 8
   \   00000020   0F04               ADD     R16, R20
   \   00000022   1F15               ADC     R17, R21
   \   00000024   ........           CALL    ATA_lfRssiGetAverageResult_C
    434          
    435                  /* increment number of measurements */
    436                  m_bNumMeasCnt++;
   \   00000028   9100....           LDS     R16, m_bNumMeasCnt
   \   0000002C   9503               INC     R16
   \   0000002E   9300....           STS     m_bNumMeasCnt, R16
    437          
    438                  /* clear flag due to data have been processed */
    439                  g_sLfRssi.bStatus &= ~LFRSSI_STATUS_BM_MEAS_DATA_AVAILABLE_FLAG;
   \   00000032   ....               LDI     R30, LOW(g_sLfRssi)
   \   00000034   ....               LDI     R31, (g_sLfRssi) >> 8
   \   00000036   8101               LDD     R16, Z+1
   \   00000038   770F               ANDI    R16, 0x7F
   \   0000003A   8301               STD     Z+1, R16
    440          
    441                  /* reconfigure LF timer in case serial measurement is taking place */
    442                  if( (g_sLfRssiCtrl_flash.bStatus & LFRSSICONFIG_STATUS_BM_MEASUREMENT_SERIAL_FLAG) && (m_bNumMeasCnt == 2) )
   \   0000003C   9100....           LDS     R16, (g_sLfRssiCtrl_flash + 1)
   \   00000040   FF00               SBRS    R16, 0
   \   00000042   C008               RJMP    ??ATA_lfRssiMeasWaitReady_flash_C_1
   \   00000044   9100....           LDS     R16, m_bNumMeasCnt
   \   00000048   3002               CPI     R16, 2
   \   0000004A   F421               BRNE    ??ATA_lfRssiMeasWaitReady_flash_C_1
    443                  {
    444                      LTCOR = (uint8_t)g_sLfRssiCustConfig_flash.wCycleTime;       /* 62 * 32ms = 1984ms */
   \   0000004C   9100....           LDS     R16, (g_sLfRssiCustConfig_flash + 2)
   \   00000050   9300....           STS     _A_LTCOR, R16
    445                  }
    446                  /* NOTE AJ: LF timer still running as configured */
    447          
    448                  g_sLfRssiFlowCtrl_flash.bIndex++;
   \                     ??ATA_lfRssiMeasWaitReady_flash_C_1:
   \   00000054   9100....           LDS     R16, g_sLfRssiFlowCtrl_flash
   \   00000058   9503               INC     R16
   \   0000005A   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    449              }
    450          }
   \                     ??ATA_lfRssiMeasWaitReady_flash_C_0:
   \   0000005E   9508               RET
   \   00000060                      REQUIRE _A_LTCOR
    451          
    452          
    453          /*----------------------------------------------------------------------------- */
    454          /** \brief <b>ATA_lfRssiMeasPrepSendResults_flash_C</b>
    455              .
    456          
    457              \param none
    458          
    459              \return none
    460          
    461              \image html ATA_lfRssiMeasPrepSendResults_flash_C.png
    462              \image rtf ATA_lfRssiMeasPrepSendResults_flash_C.png
    463              \n
    464          */
    465          /*----------------------------------------------------------------------------- */

   \                                 In  segment CODE, align 2, keep-with-next, root
    466          VOIDFUNC ATA_lfRssiMeasPrepSendResults_flash_C(void)
   \                     ATA_lfRssiMeasPrepSendResults_flash_C:
    467          {
    468              /* wait until LF timer has expired */
    469              if( g_bResponseDelayReached )
   \   00000000   9100....           LDS     R16, g_bResponseDelayReached
   \   00000004   2300               TST     R16
   \   00000006   F069               BREQ    ??ATA_lfRssiMeasPrepSendResults_flash_C_0
    470              {
    471                  g_bResponseDelayReached = FALSE;
   \   00000008   E000               LDI     R16, 0
   \   0000000A   9300....           STS     g_bResponseDelayReached, R16
    472          
    473                  /* reconfigure LF timer, 2ms due to sending LF RSSI results */
    474                  //LTCOR  = (uint8_t)g_sLfRssiCustConfig_flash.wCycleTime;       /* 62 * 32ms = 1984ms */
    475                  /* NOTE AJ: LF timer still running as configured */
    476          
    477                  /* after transmitting LF RSSI results, TX statemachine ends in IDLE mode */
    478                  g_sRfTx.bConfig &= ~BM_RFTXCONFIG_BCONFIG_STAY_TX;
   \   0000000E   ....               LDI     R30, LOW(g_sRfTx)
   \   00000010   ....               LDI     R31, (g_sRfTx) >> 8
   \   00000012   8103               LDD     R16, Z+3
   \   00000014   7F0B               ANDI    R16, 0xFB
   \   00000016   8303               STD     Z+3, R16
    479          
    480                  g_sLfRssiFlowCtrl_flash.bIndex++;
   \   00000018   9100....           LDS     R16, g_sLfRssiFlowCtrl_flash
   \   0000001C   9503               INC     R16
   \   0000001E   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    481              }
    482          }
   \                     ??ATA_lfRssiMeasPrepSendResults_flash_C_0:
   \   00000022   9508               RET
    483          
    484          
    485          /*----------------------------------------------------------------------------- */
    486          /** \brief <b>ATA_lfRssiMeasSendResult_flash_C</b>
    487              .
    488          
    489              \param none
    490          
    491              \return none
    492          
    493              \image html ATA_lfRssiMeasSendResult_flash_C.png
    494              \image rtf ATA_lfRssiMeasSendResult_flash_C.png
    495              \n
    496          */
    497          /*----------------------------------------------------------------------------- */

   \                                 In  segment CODE, align 2, keep-with-next, root
    498          VOIDFUNC ATA_lfRssiMeasSendResult_flash_C(void)
   \                     ATA_lfRssiMeasSendResult_flash_C:
    499          {
    500              /* wait until LF timer has expired */
    501              if( g_bResponseDelayReached )
   \   00000000   9100....           LDS     R16, g_bResponseDelayReached
   \   00000004   2300               TST     R16
   \   00000006   F051               BREQ    ??ATA_lfRssiMeasSendResult_flash_C_0
    502              {
    503                  /* disable running LF timer */
    504                  LTCMR &= ~BM_LTENA;
   \   00000008   98AF               CBI     0x15, 0x07
    505                  g_bBytesToTransmit = m_bDataByteCnt;
   \   0000000A   9100....           LDS     R16, m_bDataByteCnt
   \   0000000E   9300....           STS     g_bBytesToTransmit, R16
    506          
    507                  g_sLfRssiFlowCtrl_flash.bIndex++;
   \   00000012   9100....           LDS     R16, g_sLfRssiFlowCtrl_flash
   \   00000016   9503               INC     R16
   \   00000018   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    508              }
    509          }
   \                     ??ATA_lfRssiMeasSendResult_flash_C_0:
   \   0000001C   9508               RET
   \   0000001E                      REQUIRE _A_LTCMR
    510          
    511          
    512          /*---------------------------------------------------------------------------*/
    513          /** \brief <b>ATA_lfRssiMeasClose_flash_C</b>
    514              .
    515          
    516              \param none
    517          
    518              \return none
    519          
    520              \image html ATA_lfRssiMeasClose_flash_C.png
    521              \image rtf ATA_lfRssiMeasClose_flash_C.png
    522              \n
    523          */
    524          /*---------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next, root
    525          VOIDFUNC ATA_lfRssiMeasClose_flash_C(void)
   \                     ATA_lfRssiMeasClose_flash_C:
    526          {
    527              ATA_lfRssiClose_C();
   \   00000000   ........           CALL    ATA_lfRssiClose_C
    528          
    529              g_sLfRssiCtrl_flash.bFlags     = LFRSSICONFIG_FLAGS_RESET;
   \   00000004   E000               LDI     R16, 0
   \   00000006   9300....           STS     g_sLfRssiCtrl_flash, R16
    530              g_sLfRssiCtrl_flash.bStatus    = LFRSSICONFIG_STATUS_RESET;
   \   0000000A   9300....           STS     (g_sLfRssiCtrl_flash + 1), R16
    531              g_sLfRssiFlowCtrl_flash.bIndex = 0;
   \   0000000E   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    532              g_sLfRssiFlowCtrl_flash.bLastRfTxStateIndex = 0;
   \   00000012                      REQUIRE ?Subroutine1
   \   00000012                      ;               // Fall through to label ?Subroutine1
    533          }
    534          
    535          
    536          
    537          
    538          /*---------------------------------------------------------------------------*/
    539          /** \brief <b>ATA_lfRssiMeasConfigHfm_flash_C</b>
    540          
    541              \param none
    542          
    543              \return none
    544          
    545              \image html ATA_lfRssiMeasConfigHfm_flash_C.png
    546              \image rtf ATA_lfRssiMeasConfigHfm_flash_C.png
    547              \n
    548          */
    549          /*---------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next, root
    550          VOIDFUNC ATA_lfRssiMeasConfigHfm_flash_C(uint8_t bType)
   \                     ATA_lfRssiMeasConfigHfm_flash_C:
    551          {
   \   00000000   939A               ST      -Y, R25
   \   00000002   938A               ST      -Y, R24
   \   00000004   972C               SBIW    R29:R28, 12
    552              timerIRQHandler t4IrqHandler = (timerIRQHandler)ATA_lfRssiMeasStartExtHfm_flash_C;
   \   00000006   ....               LDI     R24, LOW(ATA_lfRssiMeasStartExtHfm_flash_C/2)
   \   00000008   ....               LDI     R25, (ATA_lfRssiMeasStartExtHfm_flash_C/2) >> 8
    553          
    554              g_sLfRssiCtrl_flash.bFlags  = LFRSSICONFIG_FLAGS_RESET;   // LF RSSI measurement disabled
   \   0000000A   E000               LDI     R16, 0
   \   0000000C   9300....           STS     g_sLfRssiCtrl_flash, R16
    555              g_sLfRssiCtrl_flash.bStatus = LFRSSICONFIG_STATUS_RESET;
   \   00000010   9300....           STS     (g_sLfRssiCtrl_flash + 1), R16
    556          
    557              // check if XTO is running, if not activate AVCC and XTO
    558              if( !(SUPCR & BM_AVEN) || !(FEEN1 & BM_XTOEN) )
   \   00000014   9100....           LDS     R16, _A_SUPCR
   \   00000018   FF04               SBRS    R16, 4
   \   0000001A   C004               RJMP    ??ATA_lfRssiMeasConfigHfm_flash_C_0
   \   0000001C   9100....           LDS     R16, _A_FEEN1
   \   00000020   FD02               SBRC    R16, 2
   \   00000022   C002               RJMP    ??ATA_lfRssiMeasConfigHfm_flash_C_1
    559              {
    560                  ATA_globalsActivateXTO_C(); // activate XTO, used as input clock source (CLKT) for Timer 4
   \                     ??ATA_lfRssiMeasConfigHfm_flash_C_0:
   \   00000024   ........           CALL    ATA_globalsActivateXTO_C
    561              }
    562          
    563              //g_sLfRssiFlowCtrl_flash.fpLut = g_pLfRssiHfmStateMachine_flash;
    564              //g_sLfRssiFlowCtrl_flash.fpLut = g_sLfRssiHfmStateMachineLut_flash;
    565          
    566              // 8 HFM pulses a 2,8ms, 0,2ms idle between pulses
    567              if( (bType & 0x03) == 0x01)
    568              {
    569              }
    570              // 8 HFM pulses a 1ms, 1ms idle between pulses
    571              else if((bType & 0x03) == 0x02)
    572              {
    573              }
    574              // 6 HFM pulses a 600us, 400us idle between pulses
    575              else if( (bType & 0x03) == 0x03)
    576              {
    577              }
    578              else
    579              {}
    580          
    581              // check for internal LF RSSI measurement first
    582              if( (g_sLfRssiCustConfig_flash.bOptions & 0x03) == 0x01 )
   \                     ??ATA_lfRssiMeasConfigHfm_flash_C_1:
   \   00000028   9100....           LDS     R16, (g_sLfRssiCustConfig_flash + 1)
   \   0000002C   7003               ANDI    R16, 0x03
   \   0000002E   3001               CPI     R16, 1
   \   00000030   F411               BRNE    ??ATA_lfRssiMeasConfigHfm_flash_C_2
    583              {
    584                  // replace function pointer
    585                  t4IrqHandler = (timerIRQHandler)ATA_lfRssiMeasStartIntHfm_flash_C;
   \   00000032   ....               LDI     R24, LOW(ATA_lfRssiMeasStartIntHfm_flash_C/2)
   \   00000034   ....               LDI     R25, (ATA_lfRssiMeasStartIntHfm_flash_C/2) >> 8
    586              }
    587          
    588              sTimerAsyn16BitParams sTimer4Params = {
    589                  (BM_T4ENA|BM_T4CRM),                                // T4CR
    590                  (BM_T4CS0),                                         // T4MRA  -> CLKT as input clock source
    591                  (BM_T4ICS1| BM_T4CE0),                              // T4MRB
    592                  (uint8_t)g_sLfRssiCustConfig_flash.wCycleTime,      // T4CORL
    593                  (uint8_t)(g_sLfRssiCustConfig_flash.wCycleTime>>8), // T4CORH
    594                  (BM_T4CIM),                                         // T4IMR
    595                  (timerIRQHandler)0x0000,                            // g_sTimer4.fpOvfIsr
    596                  t4IrqHandler,                                       // g_sTimer4.fpCompIsr
    597                  (timerIRQHandler)0x0000                             // g_sTimer4.fpCapIsr
    598              };
   \                     ??ATA_lfRssiMeasConfigHfm_flash_C_2:
   \   00000036   018E               MOVW    R17:R16, R29:R28
   \   00000038   ....               LDI     R30, LOW(`?<Constant {132, 1, 72, 0, 0, 2, (void (*)(voi`)
   \   0000003A   ....               LDI     R31, (`?<Constant {132, 1, 72, 0, 0, 2, (void (*)(voi`) >> 8
   \   0000003C   E04C               LDI     R20, 12
   \   0000003E   E050               LDI     R21, 0
   \   00000040   ........           CALL    ?ML_SRAM_SRAM_16_L07
   \   00000044   ....               LDI     R30, LOW(g_sLfRssiCustConfig_flash)
   \   00000046   ....               LDI     R31, (g_sLfRssiCustConfig_flash) >> 8
   \   00000048   8102               LDD     R16, Z+2
   \   0000004A   830B               STD     Y+3, R16
   \   0000004C   8103               LDD     R16, Z+3
   \   0000004E   830C               STD     Y+4, R16
   \   00000050   8788               STD     Y+8, R24
   \   00000052   8799               STD     Y+9, R25
    599          
    600              m_bNumMeasCnt = 0;   //
   \   00000054   9340....           STS     m_bNumMeasCnt, R20
    601          
    602              /* LLR-Ref: 040 */
    603              if(  ATA_timer4Open_C(&sTimer4Params) == OK )
   \   00000058   2F0C               MOV     R16, R28
   \   0000005A   ........           CALL    ATA_timer4Open_C
   \   0000005E   2300               TST     R16
   \   00000060   F479               BRNE    ??ATA_lfRssiMeasConfigHfm_flash_C_3
    604              {
    605                  // possibility to open here LF RSSI module and enable LF receiver (LFRE) in next state???
    606                  // ATA_lfRssiOpen_C();
    607          
    608                  g_sLfRssiFlowCtrl_flash.bIndex = 0;
   \   00000062   E000               LDI     R16, 0
   \   00000064   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    609          
    610                  g_sLfRssiCtrl_flash.bFlags = LFRSSICONFIG_FLAGS_BM_MEASUREMENT_ENABLE_FLAG;   // enable LF RSSI measurement
   \   00000068   E001               LDI     R16, 1
   \   0000006A   9300....           STS     g_sLfRssiCtrl_flash, R16
    611          
    612                  // check if internal LF RSSI measurement is part of the measurement sequence
    613                  if( g_sLfRssiCustConfig_flash.bOptions & 0x03 )
   \   0000006E   9100....           LDS     R16, (g_sLfRssiCustConfig_flash + 1)
   \   00000072   7003               ANDI    R16, 0x03
   \   00000074   F029               BREQ    ??ATA_lfRssiMeasConfigHfm_flash_C_3
    614                  {
    615                      g_sLfRssiCtrl_flash.bStatus |= LFRSSICONFIG_STATUS_BM_INTERNAL_MEASUREMENT_FLAG;
   \   00000076   ....               LDI     R30, LOW(g_sLfRssiCtrl_flash)
   \   00000078   ....               LDI     R31, (g_sLfRssiCtrl_flash) >> 8
   \   0000007A   8101               LDD     R16, Z+1
   \   0000007C   6004               ORI     R16, 0x04
   \   0000007E   8301               STD     Z+1, R16
    616                  }
    617              }
    618          }
   \                     ??ATA_lfRssiMeasConfigHfm_flash_C_3:
   \   00000080   962C               ADIW    R29:R28, 12
   \   00000082   9189               LD      R24, Y+
   \   00000084   9199               LD      R25, Y+
   \   00000086   9508               RET
   \   00000088                      REQUIRE _A_SUPCR
   \   00000088                      REQUIRE _A_FEEN1

   \                                 In  segment NEAR_C, align 1, keep-with-next
   \                     `?<Constant {132, 1, 72, 0, 0, 2, (void (*)(voi`:
   \   00000000   018400480200       DC8 132, 1, 72, 0, 0, 2
   \   00000006   000000000000       DC16 0H, 0H, 0H
    619          
    620          
    621          /*----------------------------------------------------------------------------- */
    622          /** \brief <b>ATA_lfRssiMeasOpenHfm_flash_C</b>
    623              .
    624          
    625              \param none
    626          
    627              \return none
    628          
    629              \image html ATA_lfRssiMeasOpenHfm_flash_C.png
    630              \image rtf ATA_lfRssiMeasOpenHfm_flash_C.png
    631              \n
    632          */
    633          /*----------------------------------------------------------------------------- */

   \                                 In  segment CODE, align 2, keep-with-next, root
    634          VOIDFUNC ATA_lfRssiMeasOpenHfm_flash_C(void)
   \                     ATA_lfRssiMeasOpenHfm_flash_C:
    635          {
    636              //if( do the SRC calibration manually if desired )
    637              {
    638              //ATA_calibInit_C();
    639              //ATA_calibStartCalibration_C(BM_CALIB_CONFIG_SRC_FRC_CALIBRATION_ENABLE_SRC);
    640              }
    641          
    642          
    643              if( g_sLfRssi.bFlags & LFRSSI_FLAGS_BM_ERROR_FLAG )
   \   00000000   9100....           LDS     R16, g_sLfRssi
   \   00000004   FD07               SBRC    R16, 7
   \   00000006   C00F               RJMP    ??ATA_lfRssiMeasOpenHfm_flash_C_0
    644              {
    645                  /* TODO AJ: implement error handling */
    646              }
    647              else
    648              {
    649                  ATA_lfRssiOpen_C();
   \   00000008   ........           CALL    ATA_lfRssiOpen_C
    650          
    651                  g_sLfRssiFlowCtrl_flash.bIndex++;
   \   0000000C   9100....           LDS     R16, g_sLfRssiFlowCtrl_flash
   \   00000010   9503               INC     R16
   \   00000012   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    652                  g_sLfRssiCtrl_flash.bStatus &= ~LFRSSICONFIG_STATUS_BM_LASTSTATECHANGE_FLAG;
   \   00000016   ....               LDI     R30, LOW(g_sLfRssiCtrl_flash)
   \   00000018   ....               LDI     R31, (g_sLfRssiCtrl_flash) >> 8
   \   0000001A   8101               LDD     R16, Z+1
   \   0000001C   7F0D               ANDI    R16, 0xFD
   \   0000001E   8301               STD     Z+1, R16
    653          
    654                  // set trigger signal for test case
    655                  g_sLfRssiCtrl_flash.bFlags |= 0x02;
   \   00000020   8100               LD      R16, Z
   \   00000022   6002               ORI     R16, 0x02
   \   00000024   8300               ST      Z, R16
    656              }
    657          }
   \                     ??ATA_lfRssiMeasOpenHfm_flash_C_0:
   \   00000026   9508               RET
    658          
    659          
    660          /*----------------------------------------------------------------------------- */
    661          /** \brief <b>ATA_lfRssiMeasStartIntHfm_flash_C</b>
    662              .
    663          
    664              \param none
    665          
    666              \return none
    667          
    668              \image html ATA_lfRssiMeasStartIntHfm_flash_C.png
    669              \image rtf ATA_lfRssiMeasStartIntHfm_flash_C.png
    670              \n
    671          */
    672          /*----------------------------------------------------------------------------- */

   \                                 In  segment CODE, align 2, keep-with-next, root
    673          VOIDFUNC ATA_lfRssiMeasStartIntHfm_flash_C(void)
   \                     ATA_lfRssiMeasStartIntHfm_flash_C:
    674          {
    675              /* start an internal LF RSSI measurement on occurrence of Timer4 compare match interrupt */
    676              ATA_lfRssiMeasStart_C( &g_sLfRssiRegConfig_flash, 1U, 0U );
   \   00000000   E030               LDI     R19, 0
   \   00000002   E021               LDI     R18, 1
   \   00000004                      REQUIRE ?Subroutine0
   \   00000004                      ;               // Fall through to label ?Subroutine0
    677          
    678              //m_pCurrResult = &g_sLfRssiHfmResult_flash[8];
    679          
    680              // close Timer4 in case last measurement was started
    681              if( m_bNumMeasCnt == (g_sLfRssiCustConfig_flash.bNumMeas-1) )
    682              {
    683                  ATA_timer4Close_C();
    684              }
    685          }

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   ....               LDI     R16, LOW(g_sLfRssiRegConfig_flash)
   \   00000002   ....               LDI     R17, (g_sLfRssiRegConfig_flash) >> 8
   \   00000004   ........           CALL    ATA_lfRssiMeasStart_C
   \   00000008   9100....           LDS     R16, m_bNumMeasCnt
   \   0000000C   E010               LDI     R17, 0
   \   0000000E   91E0....           LDS     R30, g_sLfRssiCustConfig_flash
   \   00000012   E0F0               LDI     R31, 0
   \   00000014   9731               SBIW    R31:R30, 1
   \   00000016   170E               CP      R16, R30
   \   00000018   071F               CPC     R17, R31
   \   0000001A   F411               BRNE    ??Subroutine0_0
   \   0000001C   ........           CALL    ATA_timer4Close_C
   \                     ??Subroutine0_0:
   \   00000020   9508               RET
    686          
    687          
    688          /*----------------------------------------------------------------------------- */
    689          /** \brief <b>ATA_lfRssiMeasStartExtHfm_flash_C</b>
    690              .
    691          
    692              \param none
    693          
    694              \return none
    695          
    696              \image html ATA_lfRssiMeasStartExtHfm_flash_C.png
    697              \image rtf ATA_lfRssiMeasStartExtHfm_flash_C.png
    698              \n
    699          */
    700          /*----------------------------------------------------------------------------- */

   \                                 In  segment CODE, align 2, keep-with-next, root
    701          VOIDFUNC ATA_lfRssiMeasStartExtHfm_flash_C(void)
   \                     ATA_lfRssiMeasStartExtHfm_flash_C:
    702          {
    703              uint8_t idx = m_bNumMeasCnt;
    704          
    705              /* start an external LF RSSI measurement on occurrence of Timer4 compare match interrupt */
    706              ATA_lfRssiMeasStart_C( &g_sLfRssiRegConfig_flash, 0U, 0U );
   \   00000000   E030               LDI     R19, 0
   \   00000002   E020               LDI     R18, 0
   \   00000004   ....               RJMP    ?Subroutine0
    707          
    708              // check if internal LF RSSI measurement has been already done
    709              if( (g_sLfRssiCustConfig_flash.bOptions & 0x03 )
    710                  &&
    711                  !(g_sLfRssiCtrl_flash.bStatus & LFRSSICONFIG_STATUS_BM_INTERNAL_MEASUREMENT_FLAG) )
    712              {
    713                  idx--;
    714              }
    715          
    716              //m_pCurrResult = &g_sLfRssiHfmResult_flash[idx];
    717          
    718              if( m_bNumMeasCnt == (g_sLfRssiCustConfig_flash.bNumMeas-1) )
    719              {
    720                  ATA_timer4Close_C();
    721              }
    722          }
    723          
    724          
    725          /*----------------------------------------------------------------------------- */
    726          /** \brief <b>ATA_lfRssiMeasWaitReadyHfm_flash_C</b>
    727              .
    728          
    729              \param none
    730          
    731              \return none
    732          
    733              \image html ATA_lfRssiMeasWaitReadyHfm_flash_C.png
    734              \image rtf ATA_lfRssiMeasWaitReadyHfm_flash_C.png
    735              \n
    736          */
    737          /*----------------------------------------------------------------------------- */

   \                                 In  segment CODE, align 2, keep-with-next, root
    738          VOIDFUNC ATA_lfRssiMeasWaitReadyHfm_flash_C(void)
   \                     ATA_lfRssiMeasWaitReadyHfm_flash_C:
    739          {
    740              /* wait until LF RSSI measurement signalizes readiness */
    741              if( g_sLfRssi.bStatus & LFRSSI_STATUS_BM_MEAS_DATA_AVAILABLE_FLAG )
   \   00000000   9100....           LDS     R16, (g_sLfRssi + 1)
   \   00000004   FF07               SBRS    R16, 7
   \   00000006   C03D               RJMP    ??ATA_lfRssiMeasWaitReadyHfm_flash_C_0
    742              {
    743                  /* gather measurement results */
    744                  //ATA_lfRssiGetAverageResult_C((uint8_t*)&g_sLfRssiHfmResult_flash[m_bNumMeasCnt].wRawLfRssi[0], &g_sLfRssiHfmResult_flash[m_bNumMeasCnt].bSignDetect[0]);
    745                  ATA_lfRssiGetAverageResult_C((uint8_t*)&m_pCurrResult->wRawLfRssi[0], &m_pCurrResult->bSignDetect[0]);
   \   00000008   ....               LDI     R30, LOW(m_pCurrResult)
   \   0000000A   ....               LDI     R31, (m_pCurrResult) >> 8
   \   0000000C   8120               LD      R18, Z
   \   0000000E   8131               LDD     R19, Z+1
   \   00000010   5F2A               SUBI    R18, 250
   \   00000012   4F3F               SBCI    R19, 255
   \   00000014   8100               LD      R16, Z
   \   00000016   8111               LDD     R17, Z+1
   \   00000018   ........           CALL    ATA_lfRssiGetAverageResult_C
    746                  //ATA_lfRssiGetSamplesResult_C((uint8_t*)&g_wLfRssiMeasSamples[0], 16U, 0U);
    747          
    748                  // increment number of measurements
    749                  m_bNumMeasCnt++;
   \   0000001C   9100....           LDS     R16, m_bNumMeasCnt
   \   00000020   9503               INC     R16
   \   00000022   9300....           STS     m_bNumMeasCnt, R16
    750          
    751                  // check for internal LF RSSI measurement
    752                  if( g_sLfRssiCtrl_flash.bStatus & LFRSSICONFIG_STATUS_BM_INTERNAL_MEASUREMENT_FLAG )
   \   00000026   9120....           LDS     R18, (g_sLfRssiCtrl_flash + 1)
   \   0000002A   FF22               SBRS    R18, 2
   \   0000002C   C018               RJMP    ??ATA_lfRssiMeasWaitReadyHfm_flash_C_1
    753                  {
    754                      // check if first measurement was an internal LF RSSI measurement
    755                      if( (g_sLfRssiCustConfig_flash.bOptions & 0x03) == 1 )
   \   0000002E   9100....           LDS     R16, (g_sLfRssiCustConfig_flash + 1)
   \   00000032   7003               ANDI    R16, 0x03
   \   00000034   3001               CPI     R16, 1
   \   00000036   F419               BRNE    ??ATA_lfRssiMeasWaitReadyHfm_flash_C_2
    756                      {
    757                          g_sTimer4.fpCompIsr = (timerIRQHandler)ATA_lfRssiMeasStartExtHfm_flash_C;
   \   00000038   ....               LDI     R16, LOW(ATA_lfRssiMeasStartExtHfm_flash_C/2)
   \   0000003A   ....               LDI     R17, (ATA_lfRssiMeasStartExtHfm_flash_C/2) >> 8
   \   0000003C   C00B               RJMP    ??ATA_lfRssiMeasWaitReadyHfm_flash_C_3
    758                          g_sLfRssiCtrl_flash.bStatus &= ~LFRSSICONFIG_STATUS_BM_INTERNAL_MEASUREMENT_FLAG;
    759                      }
    760                      // check if next/last measurement is an internal LF RSSI measurement
    761                      else if( (m_bNumMeasCnt+1) == g_sLfRssiCustConfig_flash.bNumMeas )
   \                     ??ATA_lfRssiMeasWaitReadyHfm_flash_C_2:
   \   0000003E   91E0....           LDS     R30, m_bNumMeasCnt
   \   00000042   E0F0               LDI     R31, 0
   \   00000044   9631               ADIW    R31:R30, 1
   \   00000046   9100....           LDS     R16, g_sLfRssiCustConfig_flash
   \   0000004A   17E0               CP      R30, R16
   \   0000004C   40F0               SBCI    R31, 0
   \   0000004E   F439               BRNE    ??ATA_lfRssiMeasWaitReadyHfm_flash_C_1
    762                      {
    763                          g_sTimer4.fpCompIsr = (timerIRQHandler)ATA_lfRssiMeasStartIntHfm_flash_C;
   \   00000050   ....               LDI     R16, LOW(ATA_lfRssiMeasStartIntHfm_flash_C/2)
   \   00000052   ....               LDI     R17, (ATA_lfRssiMeasStartIntHfm_flash_C/2) >> 8
   \                     ??ATA_lfRssiMeasWaitReadyHfm_flash_C_3:
   \   00000054   ....               LDI     R30, LOW(g_sTimer4)
   \   00000056   ....               LDI     R31, (g_sTimer4) >> 8
   \   00000058   8301               STD     Z+1, R16
   \   0000005A   8312               STD     Z+2, R17
    764                          g_sLfRssiCtrl_flash.bStatus &= ~LFRSSICONFIG_STATUS_BM_INTERNAL_MEASUREMENT_FLAG;
   \   0000005C   7F2B               ANDI    R18, 0xFB
   \                     ??ATA_lfRssiMeasWaitReadyHfm_flash_C_1:
   \   0000005E   9320....           STS     (g_sLfRssiCtrl_flash + 1), R18
    765                      }
    766                      else{}
    767                  }
    768          
    769                  // clear flag due to data have been copied
    770                  g_sLfRssi.bStatus &= ~LFRSSI_STATUS_BM_MEAS_DATA_AVAILABLE_FLAG;
   \   00000062   ....               LDI     R30, LOW(g_sLfRssi)
   \   00000064   ....               LDI     R31, (g_sLfRssi) >> 8
   \   00000066   8101               LDD     R16, Z+1
   \   00000068   770F               ANDI    R16, 0x7F
   \   0000006A   8301               STD     Z+1, R16
    771          
    772                  if( m_bNumMeasCnt >= g_sLfRssiCustConfig_flash.bNumMeas )
   \   0000006C   9100....           LDS     R16, m_bNumMeasCnt
   \   00000070   9110....           LDS     R17, g_sLfRssiCustConfig_flash
   \   00000074   1701               CP      R16, R17
   \   00000076   F028               BRCS    ??ATA_lfRssiMeasWaitReadyHfm_flash_C_0
    773                  {
    774                      // reset to first structure holding the external measurement results
    775                      //m_pResultExt = &g_sLfRssiHfmResult_flash[0];
    776                     // m_pResultInt = &g_sLfRssiHfmResult_flash[8];
    777          
    778                      g_sLfRssiFlowCtrl_flash.bIndex++;
   \   00000078   9100....           LDS     R16, g_sLfRssiFlowCtrl_flash
   \   0000007C   9503               INC     R16
   \   0000007E   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    779                  }
    780              }
    781          }
   \                     ??ATA_lfRssiMeasWaitReadyHfm_flash_C_0:
   \   00000082   9508               RET
    782          
    783          
    784          /*---------------------------------------------------------------------------*/
    785          /** \brief <b>ATA_lfRssiMeasExecCalc_flash_C</b>
    786              executes all required calculations.
    787          
    788              \param none
    789          
    790              \return none
    791          
    792              \image html ATA_lfRssiMeasExecCalc_flash_C.png
    793              \image rtf ATA_lfRssiMeasExecCalc_flash_C.png
    794              \n
    795          */
    796          /*---------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next, root
    797          VOIDFUNC ATA_lfRssiMeasExecCalc_flash_C(void)
   \                     ATA_lfRssiMeasExecCalc_flash_C:
    798          {
   \   00000000   ........           CALL    ?PROLOGUE4_L09
    799              uint8_t  i, j;
    800              uint8_t  numCalcs = g_sLfRssiCustConfig_flash.bNumMeas & 0x0F;
    801              uint16_t val;
    802          
    803              /* do calculations only if internal measurement data are available */
    804              if( g_sLfRssiCustConfig_flash.bOptions & 0x03 )
   \   00000004   9100....           LDS     R16, (g_sLfRssiCustConfig_flash + 1)
   \   00000008   7003               ANDI    R16, 0x03
   \   0000000A   F409               BRNE    $+2+2
   \   0000000C   C05C               RJMP    ??ATA_lfRssiMeasExecCalc_flash_C_0
    805              {
    806                  numCalcs--;
   \   0000000E   9190....           LDS     R25, g_sLfRssiCustConfig_flash
   \   00000012   709F               ANDI    R25, 0x0F
   \   00000014   959A               DEC     R25
    807          
    808                  for( i=0, j=0; i<numCalcs; i++, j+=2 )
   \   00000016   E080               LDI     R24, 0
   \   00000018   E0A0               LDI     R26, 0
   \   0000001A   C052               RJMP    ??ATA_lfRssiMeasExecCalc_flash_C_1
    809                  {
    810                      // calculate the channel correction values
    811                      ATA_lfRssiCalcChanCorr_C( (uint8_t*)&m_pResultExt->wRawLfRssi[0], (uint8_t*)&m_pResultInt->wRawLfRssi[0], (uint8_t*)&m_pResultExt->wCorrLfRssi[0] );
   \                     ??ATA_lfRssiMeasExecCalc_flash_C_2:
   \   0000001C   ....               LDI     R30, LOW(m_pResultExt)
   \   0000001E   ....               LDI     R31, (m_pResultExt) >> 8
   \   00000020   8140               LD      R20, Z
   \   00000022   8151               LDD     R21, Z+1
   \   00000024   5F46               SUBI    R20, 246
   \   00000026   4F5F               SBCI    R21, 255
   \   00000028   ....               LDI     R30, LOW(m_pResultInt)
   \   0000002A   ....               LDI     R31, (m_pResultInt) >> 8
   \   0000002C   8120               LD      R18, Z
   \   0000002E   8131               LDD     R19, Z+1
   \   00000030   ....               LDI     R30, LOW(m_pResultExt)
   \   00000032   ....               LDI     R31, (m_pResultExt) >> 8
   \   00000034   8100               LD      R16, Z
   \   00000036   8111               LDD     R17, Z+1
   \   00000038   ........           CALL    ATA_lfRssiCalcChanCorr_C
    812          
    813                      // calculate the 3D vector
    814                      ATA_lfRssiCalc3dVec_C( (uint8_t*)&m_pResultExt->wCorrLfRssi[0], (uint8_t*)&m_pResultExt->w3dVecVal );
   \   0000003C   ....               LDI     R30, LOW(m_pResultExt)
   \   0000003E   ....               LDI     R31, (m_pResultExt) >> 8
   \   00000040   8120               LD      R18, Z
   \   00000042   8131               LDD     R19, Z+1
   \   00000044   5F20               SUBI    R18, 240
   \   00000046   4F3F               SBCI    R19, 255
   \   00000048   8100               LD      R16, Z
   \   0000004A   8111               LDD     R17, Z+1
   \   0000004C   5F06               SUBI    R16, 246
   \   0000004E   4F1F               SBCI    R17, 255
   \   00000050   ........           CALL    ATA_lfRssiCalc3dVec_C
    815          
    816                      // calculate the linear voltage representation
    817                      ATA_lfRssiCalcLog2Lin_C( (uint8_t*)&m_pResultExt->w3dVecVal, (uint8_t*)&m_pResultExt->wLinearVal );
   \   00000054   ....               LDI     R30, LOW(m_pResultExt)
   \   00000056   ....               LDI     R31, (m_pResultExt) >> 8
   \   00000058   8120               LD      R18, Z
   \   0000005A   8131               LDD     R19, Z+1
   \   0000005C   5E2E               SUBI    R18, 238
   \   0000005E   4F3F               SBCI    R19, 255
   \   00000060   8100               LD      R16, Z
   \   00000062   8111               LDD     R17, Z+1
   \   00000064   5F00               SUBI    R16, 240
   \   00000066   4F1F               SBCI    R17, 255
   \   00000068   ........           CALL    ATA_lfRssiCalcLog2Lin_C
    818          
    819                      // calculate the Bappl value
    820                      val = ATA_lfRssiCalcBappl_C( m_wBref, m_pResultExt->wLinearVal );
   \   0000006C   ....               LDI     R30, LOW(m_pResultExt)
   \   0000006E   ....               LDI     R31, (m_pResultExt) >> 8
   \   00000070   8100               LD      R16, Z
   \   00000072   81F1               LDD     R31, Z+1
   \   00000074   2FE0               MOV     R30, R16
   \   00000076   8922               LDD     R18, Z+18
   \   00000078   8933               LDD     R19, Z+19
   \   0000007A   ....               LDI     R30, LOW(m_wBref)
   \   0000007C   ....               LDI     R31, (m_wBref) >> 8
   \   0000007E   8100               LD      R16, Z
   \   00000080   8111               LDD     R17, Z+1
   \   00000082   ........           CALL    ATA_lfRssiCalcBappl_C
    821          
    822                      // store Bappl results to local buffer
    823                      g_bTxBuffer[m_bPayloadOffsetTxBuf+j]   = val;
   \   00000086   9120....           LDS     R18, m_bPayloadOffsetTxBuf
   \   0000008A   E030               LDI     R19, 0
   \   0000008C   E0B0               LDI     R27, 0
   \   0000008E   0F2A               ADD     R18, R26
   \   00000090   1F33               ADC     R19, R19
   \   00000092   01F9               MOVW    R31:R30, R19:R18
   \   00000094   ....               SUBI    R30, LOW((-(g_bTxBuffer) & 0xFFFF))
   \   00000096   ....               SBCI    R31, (-(g_bTxBuffer) & 0xFFFF) >> 8
   \   00000098   8300               ST      Z, R16
    824                      g_bTxBuffer[m_bPayloadOffsetTxBuf+j+1] = val>>8;
   \   0000009A   9120....           LDS     R18, m_bPayloadOffsetTxBuf
   \   0000009E   0F2A               ADD     R18, R26
   \   000000A0   1FBB               ADC     R27, R27
   \   000000A2   2FE2               MOV     R30, R18
   \   000000A4   2FFB               MOV     R31, R27
   \   000000A6   ....               SUBI    R30, LOW((-(g_bTxBuffer) & 0xFFFF))
   \   000000A8   ....               SBCI    R31, (-(g_bTxBuffer) & 0xFFFF) >> 8
   \   000000AA   8311               STD     Z+1, R17
    825          
    826                      m_pResultExt++;
   \   000000AC   ....               LDI     R30, LOW(m_pResultExt)
   \   000000AE   ....               LDI     R31, (m_pResultExt) >> 8
   \   000000B0   8100               LD      R16, Z
   \   000000B2   8111               LDD     R17, Z+1
   \   000000B4   5E0C               SUBI    R16, 236
   \   000000B6   4F1F               SBCI    R17, 255
   \   000000B8   8300               ST      Z, R16
   \   000000BA   8311               STD     Z+1, R17
    827                  }
   \   000000BC   9583               INC     R24
   \   000000BE   5FAE               SUBI    R26, 254
   \                     ??ATA_lfRssiMeasExecCalc_flash_C_1:
   \   000000C0   1789               CP      R24, R25
   \   000000C2   F408               BRCC    $+2+2
   \   000000C4   CFAB               RJMP    ??ATA_lfRssiMeasExecCalc_flash_C_2
    828              }
    829          
    830              g_sLfRssiFlowCtrl_flash.bIndex++;
   \                     ??ATA_lfRssiMeasExecCalc_flash_C_0:
   \   000000C6   9100....           LDS     R16, g_sLfRssiFlowCtrl_flash
   \   000000CA   9503               INC     R16
   \   000000CC   9300....           STS     g_sLfRssiFlowCtrl_flash, R16
    831          }
   \   000000D0   E0E4               LDI     R30, 4
   \   000000D2   ........           JMP     ?EPILOGUE_B4_L09
    832          

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
      0      2   ATA_lfRssiMeasClose_flash_C
        0      2   -> ATA_lfRssiClose_C
     14      2   ATA_lfRssiMeasConfigHfm_flash_C
       14      2   -> ATA_globalsActivateXTO_C
       14      2   -> ATA_timer4Open_C
       14      2 ?ML_SRAM_SRAM_16_L07
      0      2   ATA_lfRssiMeasConfig_flash_C
      0      2   ATA_lfRssiMeasEnableLfReceiver_flash_C
      4      2   ATA_lfRssiMeasExecCalc_flash_C
        4      2   -> ATA_lfRssiCalc3dVec_C
        4      2   -> ATA_lfRssiCalcBappl_C
        4      2   -> ATA_lfRssiCalcChanCorr_C
        4      2   -> ATA_lfRssiCalcLog2Lin_C
     16      2   ATA_lfRssiMeasInit_flash_C
       16      2   -> ATA_eepReadBytes_C
       16      2   -> ATA_lfRssiCalcChanCalibVal_C
       16      2   -> ATA_lfRssiSetEepromConfig_C
      0      2   ATA_lfRssiMeasOpenHfm_flash_C
        0      2   -> ATA_lfRssiOpen_C
      0      2   ATA_lfRssiMeasOpen_flash_C
        0      2   -> ATA_lfRssiOpen_C
      0      2   ATA_lfRssiMeasPrepSendResults_flash_C
      2      2   ATA_lfRssiMeasProcessing_flash_C
        2      2   -- Indirect call
      0      2   ATA_lfRssiMeasSendResult_flash_C
      0      2   ATA_lfRssiMeasStartExtHfm_flash_C
        0      2   -> ATA_lfRssiMeasStart_C
        0      2   -> ATA_timer4Close_C
      0      2   ATA_lfRssiMeasStartExt_flash_C
        0      2   -> ATA_lfRssiMeasStart_C
        0      2   -> ATA_timer3Close_C
      0      2   ATA_lfRssiMeasStartIntHfm_flash_C
        0      2   -> ATA_lfRssiMeasStart_C
        0      2   -> ATA_timer4Close_C
      0      2   ATA_lfRssiMeasStartInt_flash_C
        0      2   -> ATA_lfRssiMeasStart_C
        0      2   -> ATA_timer3Close_C
      0      2   ATA_lfRssiMeasWaitReadyHfm_flash_C
        0      2   -> ATA_lfRssiGetAverageResult_C
      0      2   ATA_lfRssiMeasWaitReady_flash_C
        0      2   -> ATA_lfRssiGetAverageResult_C
        0      2 ?S_EC_MUL_L02


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
      12  ?<Constant {132, 1, 72, 0, 0, 2, (void (*)(voi
      34  ?Subroutine0
       6  ?Subroutine1
      18  ATA_lfRssiMeasClose_flash_C
     136  ATA_lfRssiMeasConfigHfm_flash_C
     134  ATA_lfRssiMeasConfig_flash_C
      18  ATA_lfRssiMeasEnableLfReceiver_flash_C
     214  ATA_lfRssiMeasExecCalc_flash_C
     102  ATA_lfRssiMeasInit_flash_C
      40  ATA_lfRssiMeasOpenHfm_flash_C
      98  ATA_lfRssiMeasOpen_flash_C
      36  ATA_lfRssiMeasPrepSendResults_flash_C
      38  ATA_lfRssiMeasProcessing_flash_C
      30  ATA_lfRssiMeasSendResult_flash_C
       6  ATA_lfRssiMeasStartExtHfm_flash_C
      74  ATA_lfRssiMeasStartExt_flash_C
       4  ATA_lfRssiMeasStartIntHfm_flash_C
      58  ATA_lfRssiMeasStartInt_flash_C
     132  ATA_lfRssiMeasWaitReadyHfm_flash_C
      96  ATA_lfRssiMeasWaitReady_flash_C
       1  _A_FEEN1
       1  _A_LFCR1
       1  _A_LTCMR
       1  _A_LTCOR
       1  _A_LTEMR
       1  _A_SUPCR
       2  g_pLfRssiMeasStateMachineParallel_flash
       2  g_pLfRssiMeasStateMachineSerial_flash
      60  g_sLfRssiBmwResult_flash
       2  g_sLfRssiCtrl_flash
       4  g_sLfRssiCustConfig_flash
       4  g_sLfRssiFlowCtrl_flash
      10  g_sLfRssiHfmStateMachineLut_flash
      24  g_sLfRssiMeasStateMachineLutParallel_flash
      20  g_sLfRssiMeasStateMachineLutSerial_flash
       5  g_sLfRssiRegConfig_flash
       1  m_bDataByteCnt
       1  m_bLocDataBuff_FillLevel
       1  m_bNumMeasCnt
       1  m_bPayloadOffsetTxBuf
       2  m_pCurrResult
       2  m_pResultExt
       2  m_pResultInt
       2  m_wBref
       6  -- Other

 
    15 bytes in segment .sram_FlashApp_LfRssi
    64 bytes in segment .sram_FlashApp_LfRssi_BMW
     6 bytes in segment ABSOLUTE
 1 274 bytes in segment CODE
     6 bytes in segment INITTAB
    12 bytes in segment NEAR_C
    54 bytes in segment NEAR_F
    12 bytes in segment NEAR_Z
 
 1 328 bytes of CODE  memory (+ 6 bytes shared)
    12 bytes of CONST memory
    91 bytes of DATA  memory (+ 6 bytes shared)

Errors: none
Warnings: none
