###############################################################################
#
# IAR C/C++ Compiler V7.10.1.1197 for Atmel AVR           13/May/2020  17:03:21
# Copyright 1996-2017 IAR Systems AB.
# Network license: dvriar01.mchp-main.com (STD)
#
#    Source file  =  
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\src\FlashIrq.c
#    Command line =  
#        -f C:\Users\C41045\AppData\Local\Temp\EW147D.tmp
#        (C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\src\FlashIrq.c
#        -v3 --enhanced_core -ms -o
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\Obj
#        -lCN
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\List
#        -lA
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\List
#        --no_cse --no_inline --no_code_motion --no_cross_call --no_clustering
#        --no_tbaa --debug --64k_flash -DENABLE_BIT_DEFINITIONS -e
#        --eeprom_size 2304 --clib -Ohz)
#    Locale       =  English_USA.1252
#    List file    =  
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\List\FlashIrq.lst
#    Object file  =  
#        C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\IAR\Debug\Obj\FlashIrq.r90
#
###############################################################################

C:\Users\C41045\Documents\CDB\Apps\SW_Lib\Car_Access\CARS_GEN2\ATAB5702A\Branches\P2P22_TXMODE_NXP\appl\appFlash\src\FlashIrq.c
      1          /******************************************************************************
      2            Use of this software is subject to Microchip's Software License Agreement.
      3          --------------------------------------------------------------------------------
      4            $URL: http://svnservulm.corp.atmel.com/svn/CDB/Apps/SW_Lib/Car_Access/CARS_GEN2/ATAB5702A/Branches/P2P22_TXMODE_NXP/appl/appFlash/src/FlashIrq.c $
      5            $LastChangedRevision: 586334 $
      6            $LastChangedDate: 2020-01-27 13:26:46 -0700 (Mon, 27 Jan 2020) $
      7            $LastChangedBy: grueter $
      8          -------------------------------------------------------------------------------
      9            Project:      ATA5700
     10            Target MCU:   ATA5700
     11            Compiler:     IAR C/C++ Compiler for AVR 5.51.0
     12          -------------------------------------------------------------------------------
     13          
     14          ******************************************************************************
     15          * Copyright 2017, Microchip Technology Incorporated and its subsidiaries.     *
     16          *                                                                             *
     17          * This software is owned by the Microchip Technology Incorporated.            *
     18          * Microchip hereby grants to licensee a personal                              *
     19          * non-exclusive, non-transferable license to copy, use, modify, create        *
     20          * derivative works of, and compile the Microchip Source Code and derivative   *
     21          * works for the sole and exclusive purpose of creating custom software in     *
     22          * support of licensee product to be used only in conjunction with a Microchip *
     23          * integrated circuit as specified in the applicable agreement. Any            *        
     24          * reproduction, modification, translation, compilation, or representation of  *
     25          * this software except as specified above is prohibited without the express   *
     26          * written permission of Microchip.                                            *
     27          *                                                                             *
     28          * Disclaimer: MICROCHIP MAKES NO WARRANTY OF ANY KIND, EXPRESS OR IMPLIED,    *
     29          * WITH REGARD TO THIS MATERIAL, INCLUDING, BUT NOT LIMITED TO, THE IMPLIED    *
     30          * WARRANTIES OF MERCHANTABILITY AND FITNESS FOR A PARTICULAR PURPOSE.         *
     31          * Microchip reserves the right to make changes without further notice to the  *
     32          * materials described herein. Microchip does not assume any liability arising *
     33          * out of the application or use of any product or circuit described herein.   *
     34          * Microchip does not authorize its products for use as critical components in *
     35          * life-support systems where a malfunction or failure may reasonably be       *
     36          * expected to result in significant injury to the user. The inclusion of      *
     37          * Microchip products in a life-support systems application implies that the   *
     38          * manufacturer assumes all risk of such use and in doing so indemnifies       *
     39          * Microchip against all charges.                                              *
     40          *                                                                             *
     41          * Use may be limited by and subject to the applicable Microchip software      *
     42          * license agreement.                                                          *
     43          ******************************************************************************/
     44          
     45          /** \file FlashApplIRQ.c
     46              this file contains an ATA5700 Flash application software
     47          */
     48          
     49          /*===========================================================================*/
     50          /*  INCLUDES                                                                 */
     51          /*===========================================================================*/
     52          #include "../../../firmware/init/src/init.h"

   \                                 In  segment ABSOLUTE, at 0x28
   \   union <unnamed> volatile __io _A_PORTC
   \                     _A_PORTC:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x29
   \   union <unnamed> volatile __io _A_PIND
   \                     _A_PIND:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x46
   \   union <unnamed> volatile __io _A_PCICR
   \                     _A_PCICR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x6d
   \   union <unnamed> volatile __io _A_PCMSK1
   \                     _A_PCMSK1:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x88
   \   union <unnamed> volatile __io _A_T4IMR
   \                     _A_T4IMR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x8f
   \   union <unnamed> volatile __io _A_T5IMR
   \                     _A_T5IMR:
   \   00000000                      DS8 1

   \                                 In  segment ABSOLUTE, at 0x161
   \   union <unnamed> volatile __ext_io _A_PCIFR
   \                     _A_PCIFR:
   \   00000000                      DS8 1
     53          #include "../../../firmware/rftx/src/rftx.h"
     54          #include "../../../firmware/lfrx/src/lfrx.h"
     55          #include "../../../firmware/spi/src/ata5700_command_set.h"
     56          #include "../../../firmware/stdc/src/ioATA5700.h"
     57          
     58          #include "../../../firmware/init/src/init_flash.h"
     59          #include "../../../firmware/system/src/system_flash.h"
     60          
     61          #include "../../../firmware/timer1/src/timer1.h"
     62          #include "../../../firmware/timer5/src/timer5_flash.h"
     63          #include "../../../firmware/timer4/src/timer4_flash.h"
     64          #include "../../../firmware/globals/src/globals.h"
     65          
     66          #include "../../../firmware/lfrx/src/lfrx_flash.h"
     67          #include "../../../firmware/tp/src/tp_flash.h"
     68          
     69          #include "../../../firmware/extif/src/extif_flash.h"
     70          
     71          #include "../../../firmware/lfrssi/src/lfrssi.h"
     72          #include "../../../firmware/lfrssi/src/lfrssi_flash.h"
     73          
     74          #include "../../../firmware/calib/src/calib.h"
     75          #include "../../../firmware/aes/src/aes.h"
     76          #include "FlashApplVars.h"
     77          
     78          
     79          /*===========================================================================*/
     80          /*  DEFINES                                                                  */
     81          /*===========================================================================*/
     82          
     83          /*===========================================================================*/
     84          /*  Modul Globals                                                             */
     85          /*===========================================================================*/
     86          //uint8_t guiButton =0;

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     87          uint8_t ButtonTimerCnt=0;
   \                     ButtonTimerCnt:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     88          tTimer5Status gTimer5Status;
   \                     gTimer5Status:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     89          tTimer4Status gTimer4Status;
   \                     gTimer4Status:
   \   00000000                      DS8 1

   \                                 In  segment NEAR_Z, align 1, keep-with-next
   \   00000000                      REQUIRE `?<Segment init: NEAR_Z>`
     90          tPCINTStatus gPCINTStatus;
   \                     gPCINTStatus:
   \   00000000                      DS8 1
     91          extern sFlashApplState gFlashApplState;
     92          extern sFlashApplVars gFlashApplVars;
     93          //extern sTmr5Config g_sTimer5;
     94          
     95          
     96          /*===========================================================================*/
     97          /*  IMPLEMENTATION                                                           */
     98          /*===========================================================================*/
     99          
    100          
    101          /*---------------------------------------------------------------------------*/
    102          #pragma vector=PCINT1_vect

   \                                 In  segment CODE, align 2, keep-with-next, root
    103          __interrupt VOIDFUNC ATA_pinChangeInterrupt1Handler_ISR_flash_C(void)
   \                     ATA_pinChangeInterrupt1Handler_ISR_flash_C:
    104          {
   \   00000000   93FA               ST      -Y, R31
   \   00000002   93EA               ST      -Y, R30
   \   00000004   931A               ST      -Y, R17
   \   00000006   930A               ST      -Y, R16
   \   00000008   B71F               IN      R17, 0x3F
    105             gPCINTStatus |= BM_PCINT1TRUE;  
   \   0000000A   ....               LDI     R30, LOW(gPCINTStatus)
   \   0000000C   ....               LDI     R31, (gPCINTStatus) >> 8
   \   0000000E   8100               LD      R16, Z
   \   00000010   6400               ORI     R16, 0x40
   \   00000012   8300               ST      Z, R16
    106             PCICR &= ~(1<<PCIE1);//Disable Pin change interrupt
   \   00000014   B506               IN      R16, 0x26
   \   00000016   7F0D               ANDI    R16, 0xFD
   \   00000018   BD06               OUT     0x26, R16
    107             PCIFR |= 0x02; //clear pin change interrupt bank 1 flag
   \   0000001A   91000161           LDS     R16, 353
   \   0000001E   6002               ORI     R16, 0x02
   \   00000020   93000161           STS     353, R16
    108          }
   \   00000024   ....               RJMP    ??Subroutine5_0
   \   00000026                      REQUIRE _A_PCICR
   \   00000026                      REQUIRE _A_PCIFR

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ??Subroutine5_0:
   \   00000000   BF1F               OUT     0x3F, R17
   \   00000002   9109               LD      R16, Y+
   \   00000004   9119               LD      R17, Y+
   \   00000006   91E9               LD      R30, Y+
   \   00000008   91F9               LD      R31, Y+
   \   0000000A   9518               RETI
    109          /*----------------------------------------------------------------------------- */
    110          #pragma vector=T5COMP_vect

   \                                 In  segment CODE, align 2, keep-with-next, root
    111          __interrupt VOIDFUNC ATA_timer5CompareMatchInterruptHandler_ISR_flash_C(void)
   \                     ATA_timer5CompareMatchInterruptHandler_ISR_flash_C:
    112          {
   \   00000000   93FA               ST      -Y, R31
   \   00000002   93EA               ST      -Y, R30
   \   00000004   931A               ST      -Y, R17
   \   00000006   930A               ST      -Y, R16
   \   00000008   B71F               IN      R17, 0x3F
    113            gTimer5Status |= BM_TIMER5COMPARETRUE;  
   \   0000000A   ....               LDI     R30, LOW(gTimer5Status)
   \   0000000C   ....               LDI     R31, (gTimer5Status) >> 8
   \   0000000E   ....               RJMP    ?Subroutine0
    114          }

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine0:
   \   00000000   8100               LD      R16, Z
   \   00000002   6800               ORI     R16, 0x80
   \   00000004                      REQUIRE ??Subroutine4_0
   \   00000004                      ;               // Fall through to label ??Subroutine4_0

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ??Subroutine4_0:
   \   00000000   8300               ST      Z, R16
   \   00000002                      REQUIRE ??Subroutine5_0
   \   00000002                      ;               // Fall through to label ??Subroutine5_0
    115          /*----------------------------------------------------------------------------- */
    116          #pragma vector=T4COMP_vect

   \                                 In  segment CODE, align 2, keep-with-next, root
    117          __interrupt VOIDFUNC ATA_timer4CompareMatchInterruptHandler_ISR_flash_C(void)
   \                     ATA_timer4CompareMatchInterruptHandler_ISR_flash_C:
    118          {
   \   00000000   93FA               ST      -Y, R31
   \   00000002   93EA               ST      -Y, R30
   \   00000004   931A               ST      -Y, R17
   \   00000006   930A               ST      -Y, R16
   \   00000008   B71F               IN      R17, 0x3F
    119            gTimer4Status |= BM_TIMER4COMPARETRUE;
   \   0000000A   ....               LDI     R30, LOW(gTimer4Status)
   \   0000000C   ....               LDI     R31, (gTimer4Status) >> 8
   \   0000000E   ....               RJMP    ?Subroutine0
    120          }
    121          /*----------------------------------------------------------------------------- */
    122          #pragma vector=T5OVF_vect

   \                                 In  segment CODE, align 2, keep-with-next, root
    123          __interrupt VOIDFUNC ATA_timer5OverflowInterruptHandler_ISR_flash_C(void)
   \                     ATA_timer5OverflowInterruptHandler_ISR_flash_C:
    124          {
   \   00000000   93FA               ST      -Y, R31
   \   00000002   93EA               ST      -Y, R30
   \   00000004   931A               ST      -Y, R17
   \   00000006   930A               ST      -Y, R16
   \   00000008   B71F               IN      R17, 0x3F
    125            gTimer5Status |= BM_TIMER5OVERFLOWTRUE;  
   \   0000000A   ....               LDI     R30, LOW(gTimer5Status)
   \   0000000C   ....               LDI     R31, (gTimer5Status) >> 8
   \   0000000E   8100               LD      R16, Z
   \   00000010   6400               ORI     R16, 0x40
   \   00000012   ....               RJMP    ??Subroutine4_0
    126          }
    127          /*------------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next
    128          void ATA_RKEtimerStart()
   \                     ATA_RKEtimerStart:
    129          {
    130             gPCINTStatus &= ~(BM_PCINT1TRUE);//Clear the flag
   \   00000000   ....               LDI     R30, LOW(gPCINTStatus)
   \   00000002   ....               LDI     R31, (gPCINTStatus) >> 8
   \   00000004   8100               LD      R16, Z
   \   00000006   7B0F               ANDI    R16, 0xBF
   \   00000008   8300               ST      Z, R16
    131              gFlashApplState.State |= BM_RKETIMER_ACTIVE; 
   \   0000000A   ....               LDI     R30, LOW(gFlashApplState)
   \   0000000C   ....               LDI     R31, (gFlashApplState) >> 8
   \   0000000E   8101               LDD     R16, Z+1
   \   00000010   6400               ORI     R16, 0x40
   \   00000012   8301               STD     Z+1, R16
    132             Intr_Disable(SW1_INTR);    //Disable SW1,2,3 interrupts 
   \   00000014   9100006D           LDS     R16, 109
   \   00000018   7D0F               ANDI    R16, 0xDF
   \   0000001A   9300006D           STS     109, R16
    133             Intr_Disable(SW2_INTR);
   \   0000001E   9100006D           LDS     R16, 109
   \   00000022   7B0F               ANDI    R16, 0xBF
   \   00000024   9300006D           STS     109, R16
    134             Intr_Disable(SW3_INTR);
   \   00000028   9100006D           LDS     R16, 109
   \   0000002C   770F               ANDI    R16, 0x7F
   \   0000002E   9300006D           STS     109, R16
    135             gFlashApplState.Buttons |=  BM_BUTTONPROCCESSINGACTIVE;  
   \   00000032   8103               LDD     R16, Z+3
   \   00000034   6200               ORI     R16, 0x20
   \   00000036   8303               STD     Z+3, R16
    136             ButtonTimerCnt=0;
   \   00000038   E000               LDI     R16, 0
   \   0000003A   9300....           STS     ButtonTimerCnt, R16
    137             uint16_t timer5Count = 0x0048;//72 * 1/(1 MHz/256) = 
    138             uint8_t timer5Config = (BM_T5CS1|BM_T5CS2|BM_T5CTC);//MRC 1 MHz clock/256
    139             ATA_FLashAppTimer5Start_C(timer5Count, timer5Config);  
   \   0000003E   E02E               LDI     R18, 14
   \   00000040   E408               LDI     R16, 72
   \   00000042   E010               LDI     R17, 0
   \   00000044   ....               RJMP    ATA_FLashAppTimer5Start_C
   \   00000046                      REQUIRE _A_PCMSK1
    140          }
    141          /*------------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next
    142          void ATA_RKEtimer4Start()
   \                     ATA_RKEtimer4Start:
    143          {
    144             gPCINTStatus &= ~(BM_PCINT1TRUE);//Clear the flag
   \   00000000   ....               LDI     R30, LOW(gPCINTStatus)
   \   00000002   ....               LDI     R31, (gPCINTStatus) >> 8
   \   00000004   8100               LD      R16, Z
   \   00000006   7B0F               ANDI    R16, 0xBF
   \   00000008   8300               ST      Z, R16
    145             gFlashApplState.State |= BM_RKETIMER4_ACTIVE; 
   \   0000000A   ....               LDI     R30, LOW(gFlashApplState)
   \   0000000C   ....               LDI     R31, (gFlashApplState) >> 8
   \   0000000E   8101               LDD     R16, Z+1
   \   00000010   6400               ORI     R16, 0x40
   \   00000012   8301               STD     Z+1, R16
    146             Intr_Disable(SW1_INTR);    //Disable SW1,2,3 interrupts 
   \   00000014   9100006D           LDS     R16, 109
   \   00000018   7D0F               ANDI    R16, 0xDF
   \   0000001A   9300006D           STS     109, R16
    147             Intr_Disable(SW2_INTR);
   \   0000001E   9100006D           LDS     R16, 109
   \   00000022   7B0F               ANDI    R16, 0xBF
   \   00000024   9300006D           STS     109, R16
    148             Intr_Disable(SW3_INTR);
   \   00000028   9100006D           LDS     R16, 109
   \   0000002C   770F               ANDI    R16, 0x7F
   \   0000002E   9300006D           STS     109, R16
    149             gFlashApplState.Buttons |=  BM_BUTTONPROCCESSINGACTIVE;  
   \   00000032   8103               LDD     R16, Z+3
   \   00000034   6200               ORI     R16, 0x20
   \   00000036   8303               STD     Z+3, R16
    150             ButtonTimerCnt=0;
   \   00000038   E000               LDI     R16, 0
   \   0000003A   9300....           STS     ButtonTimerCnt, R16
    151             uint16_t timer4Count = 0x0048;//72 * 1/(1 MHz/256) = 
    152             uint8_t timer4Config = (BM_T4ENA|BM_T4CRM);//MRC 1 MHz clock/256
    153             uint8_t timer4ModeA = (BM_T4CS1|BM_T4PS1|BM_T4PS2);//MRC 1 MHz clock/256
    154             ATA_FLashAppTimer4Start_C(timer4Count, timer4Config, timer4ModeA);
   \   0000003E   E13A               LDI     R19, 26
   \   00000040   E824               LDI     R18, 132
   \   00000042   E408               LDI     R16, 72
   \   00000044   E010               LDI     R17, 0
   \   00000046                      REQUIRE ?Subroutine2
   \   00000046                      REQUIRE _A_PCMSK1
   \   00000046                      ;               // Fall through to label ?Subroutine2
    155          }

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine2:
   \   00000000   ....               RJMP    ATA_FLashAppTimer4Start_C
    156          /*------------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next
    157          void ATA_RKEtimerProcess()
   \                     ATA_RKEtimerProcess:
    158          {
    159            uint8_t ButtonState;  
    160            //_WDR; 
    161            gTimer5Status &= ~(BM_TIMER5COMPARETRUE);
   \   00000000   ....               LDI     R30, LOW(gTimer5Status)
   \   00000002   ....               LDI     R31, (gTimer5Status) >> 8
   \   00000004   8100               LD      R16, Z
   \   00000006   770F               ANDI    R16, 0x7F
   \   00000008   8300               ST      Z, R16
    162            if (ButtonTimerCnt==0)
   \   0000000A   9100....           LDS     R16, ButtonTimerCnt
   \   0000000E   2300               TST     R16
   \   00000010   F441               BRNE    ??ATA_RKEtimerProcess_0
    163            {
    164            gFlashApplState.Buttons &= ~(BM_BUTTONFILTERON);//set filter off
    165            gFlashApplState.Buttons |= BM_BUTTONPROCCESSINGACTIVE;//set active true
    166            gFlashApplState.Buttons &= ~(BM_BUTTONDATAVALID);
   \   00000012   9100....           LDS     R16, (gFlashApplState + 3)
   \   00000016   7A0F               ANDI    R16, 0xAF
   \   00000018   9300....           STS     (gFlashApplState + 3), R16
   \   0000001C   6200               ORI     R16, 0x20
   \   0000001E   9300....           STS     (gFlashApplState + 3), R16
    167            }  
    168            if (bit_test(LED2)) bit_clear(LED2);
   \                     ??ATA_RKEtimerProcess_0:
   \   00000022   9B41               SBIS    0x08, 0x01
   \   00000024   C002               RJMP    ??ATA_RKEtimerProcess_1
   \   00000026   9841               CBI     0x08, 0x01
   \   00000028   C001               RJMP    ??ATA_RKEtimerProcess_2
    169            else bit_set(LED2);
   \                     ??ATA_RKEtimerProcess_1:
   \   0000002A   9A41               SBI     0x08, 0x01
    170            ButtonTimerCnt++;
   \                     ??ATA_RKEtimerProcess_2:
   \   0000002C   9100....           LDS     R16, ButtonTimerCnt
   \   00000030   9503               INC     R16
   \   00000032   9300....           STS     ButtonTimerCnt, R16
    171            ButtonState = ~(PIND | SW_BM);
    172            ButtonState = ButtonState>>5;//New SW inputs
   \   00000036   B109               IN      R16, 0x09
   \   00000038   9500               COM     R16
   \   0000003A   9502               SWAP    R16
   \   0000003C   700F               ANDI    R16, 0x0F
   \   0000003E   9506               LSR     R16
    173           if (   ((gFlashApplState.Buttons & BM_BUTTONDATAVALID)==BM_BUTTONDATAVALID)     ||  (ButtonTimerCnt>75))
   \   00000040   ....               LDI     R30, LOW(gFlashApplState)
   \   00000042   ....               LDI     R31, (gFlashApplState) >> 8
   \   00000044   8113               LDD     R17, Z+3
   \   00000046   FD14               SBRC    R17, 4
   \   00000048   C004               RJMP    ??ATA_RKEtimerProcess_3
   \   0000004A   9110....           LDS     R17, ButtonTimerCnt
   \   0000004E   341C               CPI     R17, 76
   \   00000050   F148               BRCS    ??ATA_RKEtimerProcess_4
    174            { 
    175              gFlashApplState.State &= ~(BM_RKETIMER_ACTIVE); 
   \                     ??ATA_RKEtimerProcess_3:
   \   00000052   8101               LDD     R16, Z+1
   \   00000054   7B0F               ANDI    R16, 0xBF
   \   00000056   8301               STD     Z+1, R16
    176              ATA_timer5Close_C(); 
   \   00000058   ........           CALL    ATA_timer5Close_C
    177              T5IMR = 0x00;
   \   0000005C   E000               LDI     R16, 0
   \   0000005E   9300....           STS     _A_T5IMR, R16
    178              PCIFR =0x03;
   \   00000062   E003               LDI     R16, 3
   \   00000064   9300....           STS     _A_PCIFR, R16
    179              if (  (gFlashApplState.Buttons & BM_NEWCMNDVALID)==0)//False trigger re-enable INTs
   \   00000068   ....               LDI     R30, LOW(gFlashApplState)
   \   0000006A   ....               LDI     R31, (gFlashApplState) >> 8
   \   0000006C   8103               LDD     R16, Z+3
   \   0000006E   FD07               SBRC    R16, 7
   \   00000070   C00F               RJMP    ??ATA_RKEtimerProcess_5
    180              { 
    181              Intr_Enable(SW1_INTR);    //Disable SW1,2,3 interrupts 
   \   00000072   9100006D           LDS     R16, 109
   \   00000076   6200               ORI     R16, 0x20
   \   00000078   9300006D           STS     109, R16
    182              Intr_Enable(SW2_INTR);
   \   0000007C   9100006D           LDS     R16, 109
   \   00000080   6400               ORI     R16, 0x40
   \   00000082   9300006D           STS     109, R16
    183              Intr_Enable(SW3_INTR);
   \   00000086   9100006D           LDS     R16, 109
   \   0000008A   6800               ORI     R16, 0x80
   \   0000008C   9300006D           STS     109, R16
    184              }
    185              PORTC &= ~(1<<PORTC1);   
   \                     ??ATA_RKEtimerProcess_5:
   \   00000090   9841               CBI     0x08, 0x01
    186              ButtonTimerCnt=0;
   \   00000092   E000               LDI     R16, 0
   \   00000094   9300....           STS     ButtonTimerCnt, R16
    187              gFlashApplState.Buttons &= ~(BM_BUTTONPROCCESSINGACTIVE);//set active false
   \   00000098   8103               LDD     R16, Z+3
   \   0000009A   7D0F               ANDI    R16, 0xDF
   \   0000009C   8303               STD     Z+3, R16
    188               gTimer5Status &= ~(BM_TIMER5COMPARETRUE);
   \   0000009E   ....               LDI     R30, LOW(gTimer5Status)
   \   000000A0   ....               LDI     R31, (gTimer5Status) >> 8
   \   000000A2   ....               RJMP    ?Subroutine1
    189            }
    190            else
    191            {
    192             uint8_t cmnd =  ATA_Flash_RKEbuttonfilter(ButtonState, ButtonTimerCnt); 
   \                     ??ATA_RKEtimerProcess_4:
   \   000000A4                      REQUIRE ?Subroutine3
   \   000000A4                      REQUIRE _A_PORTC
   \   000000A4                      REQUIRE _A_PIND
   \   000000A4                      REQUIRE _A_T5IMR
   \   000000A4                      REQUIRE _A_PCIFR
   \   000000A4                      REQUIRE _A_PCMSK1
   \   000000A4                      ;               // Fall through to label ?Subroutine3
    193            }
    194          }

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine3:
   \   00000000   ........           JMP     ATA_Flash_RKEbuttonfilter

   \                                 In  segment CODE, align 2, keep-with-next
   \                     ?Subroutine1:
   \   00000000   8100               LD      R16, Z
   \   00000002   770F               ANDI    R16, 0x7F
   \   00000004   8300               ST      Z, R16
   \   00000006   9508               RET
    195          /*------------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next
    196          void ATA_RKEtimer4Process()
   \                     ATA_RKEtimer4Process:
    197          {
    198            uint8_t ButtonState;  
    199            //_WDR; 
    200            gTimer4Status &= ~(BM_TIMER4COMPARETRUE);
   \   00000000   ....               LDI     R30, LOW(gTimer4Status)
   \   00000002   ....               LDI     R31, (gTimer4Status) >> 8
   \   00000004   8100               LD      R16, Z
   \   00000006   770F               ANDI    R16, 0x7F
   \   00000008   8300               ST      Z, R16
    201            if (ButtonTimerCnt==0)
   \   0000000A   9100....           LDS     R16, ButtonTimerCnt
   \   0000000E   2300               TST     R16
   \   00000010   F441               BRNE    ??ATA_RKEtimer4Process_0
    202            {
    203              gFlashApplState.Buttons &= ~(BM_BUTTONFILTERON);//set filter off
    204              gFlashApplState.Buttons |= BM_BUTTONPROCCESSINGACTIVE;//set active true
    205              gFlashApplState.Buttons &= ~(BM_BUTTONDATAVALID);
   \   00000012   9100....           LDS     R16, (gFlashApplState + 3)
   \   00000016   7A0F               ANDI    R16, 0xAF
   \   00000018   9300....           STS     (gFlashApplState + 3), R16
   \   0000001C   6200               ORI     R16, 0x20
   \   0000001E   9300....           STS     (gFlashApplState + 3), R16
    206            }   
    207            if (bit_test(LED2)) bit_clear(LED2);
   \                     ??ATA_RKEtimer4Process_0:
   \   00000022   9B41               SBIS    0x08, 0x01
   \   00000024   C002               RJMP    ??ATA_RKEtimer4Process_1
   \   00000026   9841               CBI     0x08, 0x01
   \   00000028   C001               RJMP    ??ATA_RKEtimer4Process_2
    208            else bit_set(LED2);
   \                     ??ATA_RKEtimer4Process_1:
   \   0000002A   9A41               SBI     0x08, 0x01
    209            ButtonTimerCnt++;
   \                     ??ATA_RKEtimer4Process_2:
   \   0000002C   9100....           LDS     R16, ButtonTimerCnt
   \   00000030   9503               INC     R16
   \   00000032   9300....           STS     ButtonTimerCnt, R16
    210            ButtonState = ~(PIND | SW_BM); 
    211            ButtonState = ButtonState>>5;//New SW inputs
   \   00000036   B109               IN      R16, 0x09
   \   00000038   9500               COM     R16
   \   0000003A   9502               SWAP    R16
   \   0000003C   700F               ANDI    R16, 0x0F
   \   0000003E   9506               LSR     R16
    212            
    213            if (((gFlashApplState.Buttons & BM_BUTTONDATAVALID)==BM_BUTTONDATAVALID) || (ButtonTimerCnt>75))
   \   00000040   ....               LDI     R30, LOW(gFlashApplState)
   \   00000042   ....               LDI     R31, (gFlashApplState) >> 8
   \   00000044   8113               LDD     R17, Z+3
   \   00000046   FD14               SBRC    R17, 4
   \   00000048   C004               RJMP    ??ATA_RKEtimer4Process_3
   \   0000004A   9110....           LDS     R17, ButtonTimerCnt
   \   0000004E   341C               CPI     R17, 76
   \   00000050   F148               BRCS    ??ATA_RKEtimer4Process_4
    214            { 
    215              gFlashApplState.State &= ~(BM_RKETIMER_ACTIVE); 
   \                     ??ATA_RKEtimer4Process_3:
   \   00000052   8101               LDD     R16, Z+1
   \   00000054   7B0F               ANDI    R16, 0xBF
   \   00000056   8301               STD     Z+1, R16
    216              ATA_timer4Close_C(); 
   \   00000058   ........           CALL    ATA_timer4Close_C
    217              T4IMR = 0x00;
   \   0000005C   E000               LDI     R16, 0
   \   0000005E   9300....           STS     _A_T4IMR, R16
    218              PCIFR =0x03;
   \   00000062   E003               LDI     R16, 3
   \   00000064   9300....           STS     _A_PCIFR, R16
    219              if (  (gFlashApplState.Buttons & BM_NEWCMNDVALID)==0)//False trigger re-enable INTs
   \   00000068   ....               LDI     R30, LOW(gFlashApplState)
   \   0000006A   ....               LDI     R31, (gFlashApplState) >> 8
   \   0000006C   8103               LDD     R16, Z+3
   \   0000006E   FD07               SBRC    R16, 7
   \   00000070   C00F               RJMP    ??ATA_RKEtimer4Process_5
    220              { 
    221                Intr_Enable(SW1_INTR);    //Disable SW1,2,3 interrupts 
   \   00000072   9100006D           LDS     R16, 109
   \   00000076   6200               ORI     R16, 0x20
   \   00000078   9300006D           STS     109, R16
    222                Intr_Enable(SW2_INTR);
   \   0000007C   9100006D           LDS     R16, 109
   \   00000080   6400               ORI     R16, 0x40
   \   00000082   9300006D           STS     109, R16
    223                Intr_Enable(SW3_INTR);
   \   00000086   9100006D           LDS     R16, 109
   \   0000008A   6800               ORI     R16, 0x80
   \   0000008C   9300006D           STS     109, R16
    224              }
    225              bit_clear(LED2);    
   \                     ??ATA_RKEtimer4Process_5:
   \   00000090   9841               CBI     0x08, 0x01
    226              ButtonTimerCnt=0;
   \   00000092   E000               LDI     R16, 0
   \   00000094   9300....           STS     ButtonTimerCnt, R16
    227              gFlashApplState.Buttons &= ~(BM_BUTTONPROCCESSINGACTIVE);//set active false
   \   00000098   8103               LDD     R16, Z+3
   \   0000009A   7D0F               ANDI    R16, 0xDF
   \   0000009C   8303               STD     Z+3, R16
    228              gTimer4Status &= ~(BM_TIMER4COMPARETRUE);
   \   0000009E   ....               LDI     R30, LOW(gTimer4Status)
   \   000000A0   ....               LDI     R31, (gTimer4Status) >> 8
   \   000000A2   ....               RJMP    ?Subroutine1
    229            }
    230            else
    231            {
    232              uint8_t cmnd =  ATA_Flash_RKEbuttonfilter(ButtonState, ButtonTimerCnt); 
   \                     ??ATA_RKEtimer4Process_4:
   \   000000A4   ....               RJMP    ?Subroutine3
   \   000000A6                      REQUIRE _A_PORTC
   \   000000A6                      REQUIRE _A_PIND
   \   000000A6                      REQUIRE _A_T4IMR
   \   000000A6                      REQUIRE _A_PCIFR
   \   000000A6                      REQUIRE _A_PCMSK1
    233            }
    234          }
    235          /*------------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next
    236          void ATA_FLashAppTimer5Start_C(uint16_t Timer5CompareCnt, uint8_t Timer5Config)
   \                     ATA_FLashAppTimer5Start_C:
    237          {
   \   00000000   972A               SBIW    R29:R28, 10
    238             sTimerSyn16BitParams sTimer5Params;
    239             sTimer5Params.ctrl = Timer5Config;     
   \   00000002   8328               ST      Y, R18
    240             sTimer5Params.compL = (Timer5CompareCnt&0xff);                     
   \   00000004   8309               STD     Y+1, R16
    241             sTimer5Params.compH = (Timer5CompareCnt>>8); 
   \   00000006   831A               STD     Y+2, R17
    242             sTimer5Params.countL = 0x00U;                      
   \   00000008   E000               LDI     R16, 0
   \   0000000A   830B               STD     Y+3, R16
    243             sTimer5Params.countH = 0x00U;                       
   \   0000000C   830C               STD     Y+4, R16
    244             sTimer5Params.irqMask = (BM_T5CIM);                 // T5IrqMask
   \   0000000E   E002               LDI     R16, 2
   \   00000010   830D               STD     Y+5, R16
    245             sTimer5Params.ovfIsr = (timerIRQHandler)0x0000;     // g_sTimer5.ovfIsr
   \   00000012   E000               LDI     R16, LOW(0)
   \   00000014   830E               STD     Y+6, R16
   \   00000016   830F               STD     Y+7, R16
    246             sTimer5Params.compIsr = (timerIRQHandler)0x0000;    // g_sTimer5.compIsr
   \   00000018   8708               STD     Y+8, R16
   \   0000001A   8709               STD     Y+9, R16
    247             if (ATA_timer5Open_C(&sTimer5Params) == FAIL){
   \   0000001C   018E               MOVW    R17:R16, R29:R28
   \   0000001E   ........           CALL    ATA_timer5Open_C
   \   00000022   3001               CPI     R16, 1
   \   00000024   F411               BRNE    ??ATA_FLashAppTimer5Start_C_0
    248             ATA_systemErrorLoop_flash_C();
   \   00000026   ........           CALL    ATA_systemErrorLoop_flash_C
    249             }  
    250          }
   \                     ??ATA_FLashAppTimer5Start_C_0:
   \   0000002A   962A               ADIW    R29:R28, 10
   \   0000002C   9508               RET
    251          /*------------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next
    252          void ATA_FLashAppTimer4Start_C(uint16_t Timer4CompareCnt, uint8_t Timer4Config, uint8_t timer4ModeA)
   \                     ATA_FLashAppTimer4Start_C:
    253          {
   \   00000000   972C               SBIW    R29:R28, 12
    254             sTimerAsyn16BitParams sTimer4Params;
    255             sTimer4Params.ctrl = Timer4Config;     
   \   00000002   8328               ST      Y, R18
    256             sTimer4Params.modeA = timer4ModeA;
   \   00000004   8339               STD     Y+1, R19
    257             sTimer4Params.compL = (Timer4CompareCnt&0xff);                     
   \   00000006   830B               STD     Y+3, R16
    258             sTimer4Params.compH = (Timer4CompareCnt>>8);                       
   \   00000008   831C               STD     Y+4, R17
    259             sTimer4Params.irqMask = (BM_T4CIM);                 // T4IrqMask
   \   0000000A   E002               LDI     R16, 2
   \   0000000C   830D               STD     Y+5, R16
    260             sTimer4Params.ovfIsr = (timerIRQHandler)0x0000;     // g_sTimer4.ovfIsr
   \   0000000E   E000               LDI     R16, LOW(0)
   \   00000010   830E               STD     Y+6, R16
   \   00000012   830F               STD     Y+7, R16
    261             sTimer4Params.compIsr = (timerIRQHandler)0x0000;    // g_sTimer4.compIsr
   \   00000014   8708               STD     Y+8, R16
   \   00000016   8709               STD     Y+9, R16
    262             if (ATA_timer4Open_C(&sTimer4Params) == FAIL){
   \   00000018   018E               MOVW    R17:R16, R29:R28
   \   0000001A   ........           CALL    ATA_timer4Open_C
   \   0000001E   3001               CPI     R16, 1
   \   00000020   F411               BRNE    ??ATA_FLashAppTimer4Start_C_0
    263             ATA_systemErrorLoop_flash_C();
   \   00000022   ........           CALL    ATA_systemErrorLoop_flash_C
    264             }  
    265          }
   \                     ??ATA_FLashAppTimer4Start_C_0:
   \   00000026   962C               ADIW    R29:R28, 12
   \   00000028   9508               RET
    266          /*------------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next
    267          void ATA_FlashApplTimer5Process_C()
   \                     ATA_FlashApplTimer5Process_C:
    268          {
    269            if ((gFlashApplState.State & BM_RKETIMER_ACTIVE))ATA_RKEtimerProcess();
   \   00000000   9100....           LDS     R16, (gFlashApplState + 1)
   \   00000004   FD06               SBRC    R16, 6
   \   00000006   ....               RJMP    ATA_RKEtimerProcess
    270            else if ((gFlashApplState.State & BM_PEPSRFTIMERACTIVE))ATA_rfTx_PEPSrftimingprocess_flash_C();// ATA_PEPStimerProcess();  
   \                     ??ATA_FlashApplTimer5Process_C_0:
   \   00000008   FF05               SBRS    R16, 5
   \   0000000A   C002               RJMP    ??ATA_FlashApplTimer5Process_C_1
   \   0000000C   ........           CALL    ATA_rfTx_PEPSrftimingprocess_flash_C
    271          }
   \                     ??ATA_FlashApplTimer5Process_C_1:
   \   00000010   9508               RET

   \                                 In  segment CODE, align 2, keep-with-next
    272          void ATA_FlashApplTimer4Process_C()
   \                     ATA_FlashApplTimer4Process_C:
    273          {
    274            if ((gFlashApplState.State & BM_RKETIMER_ACTIVE))ATA_RKEtimer4Process();
   \   00000000   9100....           LDS     R16, (gFlashApplState + 1)
   \   00000004   FD06               SBRC    R16, 6
   \   00000006   ....               RJMP    ATA_RKEtimer4Process
    275            else if ((gFlashApplState.State & BM_PEPSRFTIMERACTIVE))ATA_rfTx_PEPSrftimingprocess_flash_C();// ATA_PEPStimerProcess();  
   \                     ??ATA_FlashApplTimer4Process_C_0:
   \   00000008   FF05               SBRS    R16, 5
   \   0000000A   C002               RJMP    ??ATA_FlashApplTimer4Process_C_1
   \   0000000C   ........           CALL    ATA_rfTx_PEPSrftimingprocess_flash_C
    276          }
   \                     ??ATA_FlashApplTimer4Process_C_1:
   \   00000010   9508               RET
    277          /*------------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next
    278          void ATA_PEPStimerStart(uint8_t mscount)
   \                     ATA_PEPStimerStart:
    279          {
    280             Intr_Disable(SW1_INTR);    //Disable SW1,2,3 interrupts 
   \   00000000   9110006D           LDS     R17, 109
   \   00000004   7D1F               ANDI    R17, 0xDF
   \   00000006   9310006D           STS     109, R17
    281             Intr_Disable(SW2_INTR);
   \   0000000A   9110006D           LDS     R17, 109
   \   0000000E   7B1F               ANDI    R17, 0xBF
   \   00000010   9310006D           STS     109, R17
    282             Intr_Disable(SW3_INTR);
   \   00000014   9110006D           LDS     R17, 109
   \   00000018   771F               ANDI    R17, 0x7F
   \   0000001A   9310006D           STS     109, R17
    283             uint16_t timer4Count = mscount*0x219;//72 * 1/(1 MHz/256) = 
    284             uint8_t timer4Config = (BM_T4ENA|BM_T4CRM);//MRC 1 MHz clock/256
    285             uint8_t timer4ModeA = (BM_T4CS1|BM_T4PS0);//MRC 1 MHz clock/256
    286             ATA_FLashAppTimer4Start_C(timer4Count, timer4Config, timer4ModeA);
   \   0000001E   E036               LDI     R19, 6
   \   00000020   E824               LDI     R18, 132
   \   00000022   E010               LDI     R17, 0
   \   00000024   E149               LDI     R20, 25
   \   00000026   E052               LDI     R21, 2
   \   00000028   ........           CALL    ?S_EC_MUL_L02
   \   0000002C   ....               RJMP    ?Subroutine2
   \   0000002E                      REQUIRE _A_PCMSK1
    287          }
    288          /*------------------------------------------------------------------------------*/

   \                                 In  segment CODE, align 2, keep-with-next
    289          void ATA_PEPStimerProcess()
   \                     ATA_PEPStimerProcess:
    290          {
    291            //_WDR; 
    292            ATA_timer5Close_C(); 
   \   00000000   ........           CALL    ATA_timer5Close_C
    293            T5IMR = 0x00;
   \   00000004   E000               LDI     R16, 0
   \   00000006   9300....           STS     _A_T5IMR, R16
    294            gTimer5Status &= ~(BM_TIMER5COMPARETRUE);  
   \   0000000A   ....               LDI     R30, LOW(gTimer5Status)
   \   0000000C   ....               LDI     R31, (gTimer5Status) >> 8
   \   0000000E   8100               LD      R16, Z
   \   00000010   770F               ANDI    R16, 0x7F
   \   00000012   8300               ST      Z, R16
    295            gFlashApplState.State &= ~(BM_MSGTIMER_ACTIVE); 
   \   00000014   ....               LDI     R30, LOW(gFlashApplState)
   \   00000016   ....               LDI     R31, (gFlashApplState) >> 8
   \   00000018   8101               LDD     R16, Z+1
   \   0000001A   770F               ANDI    R16, 0x7F
   \   0000001C   8301               STD     Z+1, R16
    296            Intr_Enable(SW1_INTR);    //Enable SW1,2,3 interrupts 
   \   0000001E   9100006D           LDS     R16, 109
   \   00000022   6200               ORI     R16, 0x20
   \   00000024   9300006D           STS     109, R16
    297            Intr_Enable(SW2_INTR);
   \   00000028   9100006D           LDS     R16, 109
   \   0000002C   6400               ORI     R16, 0x40
   \   0000002E   9300006D           STS     109, R16
    298            Intr_Enable(SW3_INTR);   
   \   00000032   9100006D           LDS     R16, 109
   \   00000036   6800               ORI     R16, 0x80
   \   00000038   9300006D           STS     109, R16
    299          }
   \   0000003C   9508               RET
   \   0000003E                      REQUIRE _A_T5IMR
   \   0000003E                      REQUIRE _A_PCMSK1

   \                                 In  segment CODE, align 2, keep-with-next
    300          void ATA_transTXtimerStart(uint16_t mscount)
   \                     ATA_transTXtimerStart:
    301          {
    302             uint16_t timer4Count = mscount;//72 * 1/(1 MHz/256) = 
    303             uint8_t timer4Config = (BM_T4ENA|BM_T4CRM);//MRC 1 MHz clock/256
    304             uint8_t timer4ModeA = (BM_T4CS1|BM_T4PS0|BM_T4PS2);//MRC 1 MHz clock/256
    305             gTimer4Status = 0x00;
   \   00000000   E020               LDI     R18, 0
   \   00000002   9320....           STS     gTimer4Status, R18
    306             ATA_FLashAppTimer4Start_C(timer4Count, timer4Config, timer4ModeA);
   \   00000006   E136               LDI     R19, 22
   \   00000008   E824               LDI     R18, 132
   \   0000000A   ....               RJMP    ?Subroutine2
    307          }

   \                                 In  segment CODE, align 2, keep-with-next
    308          uint8_t ATA_transTXtimerProcess()
   \                     ATA_transTXtimerProcess:
    309          {
    310            if((gTimer4Status & BM_TIMER4COMPARETRUE) == 0x80 )
   \   00000000   9100....           LDS     R16, gTimer4Status
   \   00000004   FF07               SBRS    R16, 7
   \   00000006   C009               RJMP    ??ATA_transTXtimerProcess_0
    311            {
    312              ATA_timer4Close_C(); 
   \   00000008   ........           CALL    ATA_timer4Close_C
    313             // T4IFR |= 0x02;// CLear the T4 compare flag
    314              T4IMR = 0x00;
   \   0000000C   E000               LDI     R16, 0
   \   0000000E   9300....           STS     _A_T4IMR, R16
    315              gTimer4Status = 0x00;
   \   00000012   9300....           STS     gTimer4Status, R16
    316              return (1);
   \   00000016   E001               LDI     R16, 1
   \   00000018   9508               RET
    317            }
    318            return(0); 
   \                     ??ATA_transTXtimerProcess_0:
   \   0000001A   E000               LDI     R16, 0
   \   0000001C   9508               RET
   \   0000001E                      REQUIRE _A_T4IMR
    319          }

   \                                 In  segment INTVEC, offset 0x10, root
   \                     `??ATA_pinChangeInterrupt1Handler_ISR_flash_C::?`:
   \   00000010   ........           JMP     ATA_pinChangeInterrupt1Handler_ISR_flash_C

   \                                 In  segment INTVEC, offset 0x44, root
   \                     ??ATA_timer4CompareMatchInterruptHandler_ISR_fl:
   \   00000044   ........           JMP     ATA_timer4CompareMatchInterruptHandler_ISR_flash_C

   \                                 In  segment INTVEC, offset 0x4c, root
   \                     ??ATA_timer5CompareMatchInterruptHandler_ISR_fl:
   \   0000004C   ........           JMP     ATA_timer5CompareMatchInterruptHandler_ISR_flash_C

   \                                 In  segment INTVEC, offset 0x50, root
   \                     ??ATA_timer5OverflowInterruptHandler_ISR_flash_:
   \   00000050   ........           JMP     ATA_timer5OverflowInterruptHandler_ISR_flash_C

   Maximum stack usage in bytes:

   CSTACK RSTACK Function
   ------ ------ --------
     12      2   ATA_FLashAppTimer4Start_C
       12      2   -> ATA_systemErrorLoop_flash_C
       12      2   -> ATA_timer4Open_C
     10      2   ATA_FLashAppTimer5Start_C
       10      2   -> ATA_systemErrorLoop_flash_C
       10      2   -> ATA_timer5Open_C
      0      2   ATA_FlashApplTimer4Process_C
        0      2   -> ATA_RKEtimer4Process
        0      2   -> ATA_rfTx_PEPSrftimingprocess_flash_C
      0      2   ATA_FlashApplTimer5Process_C
        0      2   -> ATA_RKEtimerProcess
        0      2   -> ATA_rfTx_PEPSrftimingprocess_flash_C
      0      2   ATA_PEPStimerProcess
        0      2   -> ATA_timer5Close_C
      0      2   ATA_PEPStimerStart
        0      2   -> ATA_FLashAppTimer4Start_C
        0      2 ?S_EC_MUL_L02
      0      2   ATA_RKEtimer4Process
        0      2   -> ATA_Flash_RKEbuttonfilter
        0      2   -> ATA_timer4Close_C
      0      2   ATA_RKEtimer4Start
        0      2   -> ATA_FLashAppTimer4Start_C
      0      2   ATA_RKEtimerProcess
        0      2   -> ATA_Flash_RKEbuttonfilter
        0      2   -> ATA_timer5Close_C
      0      2   ATA_RKEtimerStart
        0      2   -> ATA_FLashAppTimer5Start_C
      4      2   ATA_pinChangeInterrupt1Handler_ISR_flash_C
      4      2   ATA_timer4CompareMatchInterruptHandler_ISR_flash_C
      4      2   ATA_timer5CompareMatchInterruptHandler_ISR_flash_C
      4      2   ATA_timer5OverflowInterruptHandler_ISR_flash_C
      0      2   ATA_transTXtimerProcess
        0      2   -> ATA_timer4Close_C
      0      2   ATA_transTXtimerStart
        0      2   -> ATA_FLashAppTimer4Start_C


   Segment part sizes:

   Bytes  Function/Label
   -----  --------------
       2  ??Subroutine4_0
      12  ??Subroutine5_0
       4  ?Subroutine0
       8  ?Subroutine1
       2  ?Subroutine2
       4  ?Subroutine3
      42  ATA_FLashAppTimer4Start_C
      46  ATA_FLashAppTimer5Start_C
      18  ATA_FlashApplTimer4Process_C
      18  ATA_FlashApplTimer5Process_C
      62  ATA_PEPStimerProcess
      46  ATA_PEPStimerStart
     166  ATA_RKEtimer4Process
      70  ATA_RKEtimer4Start
     164  ATA_RKEtimerProcess
      70  ATA_RKEtimerStart
      38  ATA_pinChangeInterrupt1Handler_ISR_flash_C
       4  ATA_pinChangeInterrupt1Handler_ISR_flash_C::??INTVEC 16
      16  ATA_timer4CompareMatchInterruptHandler_ISR_flash_C
       4  ATA_timer4CompareMatchInterruptHandler_ISR_flash_C::??INTVEC 68
      16  ATA_timer5CompareMatchInterruptHandler_ISR_flash_C
       4  ATA_timer5CompareMatchInterruptHandler_ISR_flash_C::??INTVEC 76
      20  ATA_timer5OverflowInterruptHandler_ISR_flash_C
       4  ATA_timer5OverflowInterruptHandler_ISR_flash_C::??INTVEC 80
      30  ATA_transTXtimerProcess
      12  ATA_transTXtimerStart
       1  ButtonTimerCnt
       1  _A_PCICR
       1  _A_PCIFR
       1  _A_PCMSK1
       1  _A_PIND
       1  _A_PORTC
       1  _A_T4IMR
       1  _A_T5IMR
       1  gPCINTStatus
       1  gTimer4Status
       1  gTimer5Status
       6  -- Other

 
   7 bytes in segment ABSOLUTE
 866 bytes in segment CODE
   6 bytes in segment INITTAB
  16 bytes in segment INTVEC
   4 bytes in segment NEAR_Z
 
 866 bytes of CODE memory (+ 22 bytes shared)
   4 bytes of DATA memory (+  7 bytes shared)

Errors: none
Warnings: none
